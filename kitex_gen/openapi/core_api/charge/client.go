// Code generated by Kitex v0.11.3. DO NOT EDIT.

package charge

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
	core_api "github.com/xh-polaris/service-idl-gen-go/kitex_gen/openapi/core_api"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	CreateBaseInterface(ctx context.Context, Req *core_api.CreateBaseInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	UpdateBaseInterface(ctx context.Context, Req *core_api.UpdateBaseInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	DeleteBaseInterface(ctx context.Context, Req *core_api.DeleteBaseInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	GetBaseInterfaces(ctx context.Context, Req *core_api.GetBaseInterfacesReq, callOptions ...callopt.Option) (r *core_api.GetBaseInterfacesResp, err error)
	CreateFullInterface(ctx context.Context, Req *core_api.CreateFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	UpdateFullInterface(ctx context.Context, Req *core_api.UpdateFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	UpdateMargin(ctx context.Context, Req *core_api.UpdateMarginReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	DeleteFullInterface(ctx context.Context, Req *core_api.DeleteFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	GetFullInterfaces(ctx context.Context, Req *core_api.GetFullInterfacesReq, callOptions ...callopt.Option) (r *core_api.GetFullInterfacesResp, err error)
	BuyFullInterface(ctx context.Context, Req *core_api.BuyFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	CreateGradient(ctx context.Context, Req *core_api.CreateGradientReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	UpdateGradient(ctx context.Context, Req *core_api.UpdateGradientReq, callOptions ...callopt.Option) (r *core_api.Response, err error)
	GetGradient(ctx context.Context, Req *core_api.GetGradientReq, callOptions ...callopt.Option) (r *core_api.GetGradientResp, err error)
	GetAmount(ctx context.Context, Req *core_api.GetAmountReq, callOptions ...callopt.Option) (r *core_api.GetAmountResp, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kChargeClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kChargeClient struct {
	*kClient
}

func (p *kChargeClient) CreateBaseInterface(ctx context.Context, Req *core_api.CreateBaseInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateBaseInterface(ctx, Req)
}

func (p *kChargeClient) UpdateBaseInterface(ctx context.Context, Req *core_api.UpdateBaseInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateBaseInterface(ctx, Req)
}

func (p *kChargeClient) DeleteBaseInterface(ctx context.Context, Req *core_api.DeleteBaseInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteBaseInterface(ctx, Req)
}

func (p *kChargeClient) GetBaseInterfaces(ctx context.Context, Req *core_api.GetBaseInterfacesReq, callOptions ...callopt.Option) (r *core_api.GetBaseInterfacesResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetBaseInterfaces(ctx, Req)
}

func (p *kChargeClient) CreateFullInterface(ctx context.Context, Req *core_api.CreateFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateFullInterface(ctx, Req)
}

func (p *kChargeClient) UpdateFullInterface(ctx context.Context, Req *core_api.UpdateFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateFullInterface(ctx, Req)
}

func (p *kChargeClient) UpdateMargin(ctx context.Context, Req *core_api.UpdateMarginReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateMargin(ctx, Req)
}

func (p *kChargeClient) DeleteFullInterface(ctx context.Context, Req *core_api.DeleteFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteFullInterface(ctx, Req)
}

func (p *kChargeClient) GetFullInterfaces(ctx context.Context, Req *core_api.GetFullInterfacesReq, callOptions ...callopt.Option) (r *core_api.GetFullInterfacesResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetFullInterfaces(ctx, Req)
}

func (p *kChargeClient) BuyFullInterface(ctx context.Context, Req *core_api.BuyFullInterfaceReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BuyFullInterface(ctx, Req)
}

func (p *kChargeClient) CreateGradient(ctx context.Context, Req *core_api.CreateGradientReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.CreateGradient(ctx, Req)
}

func (p *kChargeClient) UpdateGradient(ctx context.Context, Req *core_api.UpdateGradientReq, callOptions ...callopt.Option) (r *core_api.Response, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateGradient(ctx, Req)
}

func (p *kChargeClient) GetGradient(ctx context.Context, Req *core_api.GetGradientReq, callOptions ...callopt.Option) (r *core_api.GetGradientResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetGradient(ctx, Req)
}

func (p *kChargeClient) GetAmount(ctx context.Context, Req *core_api.GetAmountReq, callOptions ...callopt.Option) (r *core_api.GetAmountResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetAmount(ctx, Req)
}
