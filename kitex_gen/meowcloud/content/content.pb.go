// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: meowcloud/content/content.proto

package content

import (
	context "context"
	basic "github.com/xh-polaris/service-idl-gen-go/kitex_gen/basic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *CreateAlbumReq) Reset() {
	*x = CreateAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlbumReq) ProtoMessage() {}

func (x *CreateAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlbumReq.ProtoReflect.Descriptor instead.
func (*CreateAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAlbumReq) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

type CreateAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *CreateAlbumResp) Reset() {
	*x = CreateAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAlbumResp) ProtoMessage() {}

func (x *CreateAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAlbumResp.ProtoReflect.Descriptor instead.
func (*CreateAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAlbumResp) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

type RetrieveAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveAlbumReq) Reset() {
	*x = RetrieveAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAlbumReq) ProtoMessage() {}

func (x *RetrieveAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAlbumReq.ProtoReflect.Descriptor instead.
func (*RetrieveAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveAlbumReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrieveAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *RetrieveAlbumResp) Reset() {
	*x = RetrieveAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveAlbumResp) ProtoMessage() {}

func (x *RetrieveAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveAlbumResp.ProtoReflect.Descriptor instead.
func (*RetrieveAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveAlbumResp) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

type UpdateAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Album *Album `protobuf:"bytes,1,opt,name=album,proto3" json:"album,omitempty"`
}

func (x *UpdateAlbumReq) Reset() {
	*x = UpdateAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlbumReq) ProtoMessage() {}

func (x *UpdateAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlbumReq.ProtoReflect.Descriptor instead.
func (*UpdateAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateAlbumReq) GetAlbum() *Album {
	if x != nil {
		return x.Album
	}
	return nil
}

type UpdateAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAlbumResp) Reset() {
	*x = UpdateAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAlbumResp) ProtoMessage() {}

func (x *UpdateAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAlbumResp.ProtoReflect.Descriptor instead.
func (*UpdateAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{5}
}

type DeleteAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteAlbumReq) Reset() {
	*x = DeleteAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlbumReq) ProtoMessage() {}

func (x *DeleteAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlbumReq.ProtoReflect.Descriptor instead.
func (*DeleteAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteAlbumReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAlbumResp) Reset() {
	*x = DeleteAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAlbumResp) ProtoMessage() {}

func (x *DeleteAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAlbumResp.ProtoReflect.Descriptor instead.
func (*DeleteAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{7}
}

type ListAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,1,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListAlbumReq) Reset() {
	*x = ListAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlbumReq) ProtoMessage() {}

func (x *ListAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlbumReq.ProtoReflect.Descriptor instead.
func (*ListAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{8}
}

func (x *ListAlbumReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Albums []*Album `protobuf:"bytes,1,rep,name=Albums,proto3" json:"Albums,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListAlbumResp) Reset() {
	*x = ListAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAlbumResp) ProtoMessage() {}

func (x *ListAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAlbumResp.ProtoReflect.Descriptor instead.
func (*ListAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{9}
}

func (x *ListAlbumResp) GetAlbums() []*Album {
	if x != nil {
		return x.Albums
	}
	return nil
}

func (x *ListAlbumResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreatePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *CreatePhotoReq) Reset() {
	*x = CreatePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoReq) ProtoMessage() {}

func (x *CreatePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoReq.ProtoReflect.Descriptor instead.
func (*CreatePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePhotoReq) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type CreatePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *CreatePhotoResp) Reset() {
	*x = CreatePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoResp) ProtoMessage() {}

func (x *CreatePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoResp.ProtoReflect.Descriptor instead.
func (*CreatePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{11}
}

func (x *CreatePhotoResp) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type RetrievePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrievePhotoReq) Reset() {
	*x = RetrievePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePhotoReq) ProtoMessage() {}

func (x *RetrievePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePhotoReq.ProtoReflect.Descriptor instead.
func (*RetrievePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{12}
}

func (x *RetrievePhotoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrievePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *RetrievePhotoResp) Reset() {
	*x = RetrievePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePhotoResp) ProtoMessage() {}

func (x *RetrievePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePhotoResp.ProtoReflect.Descriptor instead.
func (*RetrievePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{13}
}

func (x *RetrievePhotoResp) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type UpdatePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *UpdatePhotoReq) Reset() {
	*x = UpdatePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoReq) ProtoMessage() {}

func (x *UpdatePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoReq.ProtoReflect.Descriptor instead.
func (*UpdatePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{14}
}

func (x *UpdatePhotoReq) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type UpdatePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePhotoResp) Reset() {
	*x = UpdatePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoResp) ProtoMessage() {}

func (x *UpdatePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoResp.ProtoReflect.Descriptor instead.
func (*UpdatePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{15}
}

type DeletePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePhotoReq) Reset() {
	*x = DeletePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhotoReq) ProtoMessage() {}

func (x *DeletePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhotoReq.ProtoReflect.Descriptor instead.
func (*DeletePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{16}
}

func (x *DeletePhotoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePhotoResp) Reset() {
	*x = DeletePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhotoResp) ProtoMessage() {}

func (x *DeletePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhotoResp.ProtoReflect.Descriptor instead.
func (*DeletePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{17}
}

type ListPhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlbumId           string                   `protobuf:"bytes,1,opt,name=albumId,proto3" json:"albumId,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,2,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
	OnlyFeatured      *bool                    `protobuf:"varint,3,opt,name=onlyFeatured,proto3,oneof" json:"onlyFeatured,omitempty"`
}

func (x *ListPhotoReq) Reset() {
	*x = ListPhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhotoReq) ProtoMessage() {}

func (x *ListPhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhotoReq.ProtoReflect.Descriptor instead.
func (*ListPhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{18}
}

func (x *ListPhotoReq) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *ListPhotoReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

func (x *ListPhotoReq) GetOnlyFeatured() bool {
	if x != nil && x.OnlyFeatured != nil {
		return *x.OnlyFeatured
	}
	return false
}

type ListPhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photos []*Photo `protobuf:"bytes,1,rep,name=photos,proto3" json:"photos,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPhotoResp) Reset() {
	*x = ListPhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhotoResp) ProtoMessage() {}

func (x *ListPhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhotoResp.ProtoReflect.Descriptor instead.
func (*ListPhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{19}
}

func (x *ListPhotoResp) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *ListPhotoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_meowcloud_content_content_proto protoreflect.FileDescriptor

var file_meowcloud_content_content_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x0e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2e,
	0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x41,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x61, 0x6c,
	0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x40, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x05,
	0x61, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x05, 0x61, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x11, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x71, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x57, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x06, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x52, 0x06, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x40, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x11, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x40,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71,
	0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc5, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x62,
	0x75, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x6c, 0x62, 0x75,
	0x6d, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x27, 0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64,
	0x22, 0x57, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xec, 0x06, 0x0a, 0x0e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x0b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x21, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5a, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x21, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x5a, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x54, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x42, 0x7e, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e,
	0x78, 0x68, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x69, 0x64, 0x6c, 0x67, 0x65, 0x6e,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x42, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78,
	0x68, 0x2d, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2d, 0x69, 0x64, 0x6c, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x74,
	0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meowcloud_content_content_proto_rawDescOnce sync.Once
	file_meowcloud_content_content_proto_rawDescData = file_meowcloud_content_content_proto_rawDesc
)

func file_meowcloud_content_content_proto_rawDescGZIP() []byte {
	file_meowcloud_content_content_proto_rawDescOnce.Do(func() {
		file_meowcloud_content_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_meowcloud_content_content_proto_rawDescData)
	})
	return file_meowcloud_content_content_proto_rawDescData
}

var file_meowcloud_content_content_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_meowcloud_content_content_proto_goTypes = []interface{}{
	(*CreateAlbumReq)(nil),          // 0: meowcloud.content.CreateAlbumReq
	(*CreateAlbumResp)(nil),         // 1: meowcloud.content.CreateAlbumResp
	(*RetrieveAlbumReq)(nil),        // 2: meowcloud.content.RetrieveAlbumReq
	(*RetrieveAlbumResp)(nil),       // 3: meowcloud.content.RetrieveAlbumResp
	(*UpdateAlbumReq)(nil),          // 4: meowcloud.content.UpdateAlbumReq
	(*UpdateAlbumResp)(nil),         // 5: meowcloud.content.UpdateAlbumResp
	(*DeleteAlbumReq)(nil),          // 6: meowcloud.content.DeleteAlbumReq
	(*DeleteAlbumResp)(nil),         // 7: meowcloud.content.DeleteAlbumResp
	(*ListAlbumReq)(nil),            // 8: meowcloud.content.ListAlbumReq
	(*ListAlbumResp)(nil),           // 9: meowcloud.content.ListAlbumResp
	(*CreatePhotoReq)(nil),          // 10: meowcloud.content.CreatePhotoReq
	(*CreatePhotoResp)(nil),         // 11: meowcloud.content.CreatePhotoResp
	(*RetrievePhotoReq)(nil),        // 12: meowcloud.content.RetrievePhotoReq
	(*RetrievePhotoResp)(nil),       // 13: meowcloud.content.RetrievePhotoResp
	(*UpdatePhotoReq)(nil),          // 14: meowcloud.content.UpdatePhotoReq
	(*UpdatePhotoResp)(nil),         // 15: meowcloud.content.UpdatePhotoResp
	(*DeletePhotoReq)(nil),          // 16: meowcloud.content.DeletePhotoReq
	(*DeletePhotoResp)(nil),         // 17: meowcloud.content.DeletePhotoResp
	(*ListPhotoReq)(nil),            // 18: meowcloud.content.ListPhotoReq
	(*ListPhotoResp)(nil),           // 19: meowcloud.content.ListPhotoResp
	(*Album)(nil),                   // 20: meowcloud.content.Album
	(*basic.PaginationOptions)(nil), // 21: basic.PaginationOptions
	(*Photo)(nil),                   // 22: meowcloud.content.Photo
}
var file_meowcloud_content_content_proto_depIdxs = []int32{
	20, // 0: meowcloud.content.CreateAlbumReq.album:type_name -> meowcloud.content.Album
	20, // 1: meowcloud.content.CreateAlbumResp.album:type_name -> meowcloud.content.Album
	20, // 2: meowcloud.content.RetrieveAlbumResp.album:type_name -> meowcloud.content.Album
	20, // 3: meowcloud.content.UpdateAlbumReq.album:type_name -> meowcloud.content.Album
	21, // 4: meowcloud.content.ListAlbumReq.paginationOptions:type_name -> basic.PaginationOptions
	20, // 5: meowcloud.content.ListAlbumResp.Albums:type_name -> meowcloud.content.Album
	22, // 6: meowcloud.content.CreatePhotoReq.photo:type_name -> meowcloud.content.Photo
	22, // 7: meowcloud.content.CreatePhotoResp.photo:type_name -> meowcloud.content.Photo
	22, // 8: meowcloud.content.RetrievePhotoResp.photo:type_name -> meowcloud.content.Photo
	22, // 9: meowcloud.content.UpdatePhotoReq.photo:type_name -> meowcloud.content.Photo
	21, // 10: meowcloud.content.ListPhotoReq.paginationOptions:type_name -> basic.PaginationOptions
	22, // 11: meowcloud.content.ListPhotoResp.photos:type_name -> meowcloud.content.Photo
	0,  // 12: meowcloud.content.ContentService.CreateAlbum:input_type -> meowcloud.content.CreateAlbumReq
	2,  // 13: meowcloud.content.ContentService.RetrieveAlbum:input_type -> meowcloud.content.RetrieveAlbumReq
	4,  // 14: meowcloud.content.ContentService.UpdateAlbum:input_type -> meowcloud.content.UpdateAlbumReq
	6,  // 15: meowcloud.content.ContentService.DeleteAlbum:input_type -> meowcloud.content.DeleteAlbumReq
	8,  // 16: meowcloud.content.ContentService.ListAlbum:input_type -> meowcloud.content.ListAlbumReq
	10, // 17: meowcloud.content.ContentService.CreatePhoto:input_type -> meowcloud.content.CreatePhotoReq
	12, // 18: meowcloud.content.ContentService.RetrievePhoto:input_type -> meowcloud.content.RetrievePhotoReq
	14, // 19: meowcloud.content.ContentService.UpdatePhoto:input_type -> meowcloud.content.UpdatePhotoReq
	16, // 20: meowcloud.content.ContentService.DeletePhoto:input_type -> meowcloud.content.DeletePhotoReq
	18, // 21: meowcloud.content.ContentService.ListPhoto:input_type -> meowcloud.content.ListPhotoReq
	1,  // 22: meowcloud.content.ContentService.CreateAlbum:output_type -> meowcloud.content.CreateAlbumResp
	3,  // 23: meowcloud.content.ContentService.RetrieveAlbum:output_type -> meowcloud.content.RetrieveAlbumResp
	5,  // 24: meowcloud.content.ContentService.UpdateAlbum:output_type -> meowcloud.content.UpdateAlbumResp
	7,  // 25: meowcloud.content.ContentService.DeleteAlbum:output_type -> meowcloud.content.DeleteAlbumResp
	9,  // 26: meowcloud.content.ContentService.ListAlbum:output_type -> meowcloud.content.ListAlbumResp
	11, // 27: meowcloud.content.ContentService.CreatePhoto:output_type -> meowcloud.content.CreatePhotoResp
	13, // 28: meowcloud.content.ContentService.RetrievePhoto:output_type -> meowcloud.content.RetrievePhotoResp
	15, // 29: meowcloud.content.ContentService.UpdatePhoto:output_type -> meowcloud.content.UpdatePhotoResp
	17, // 30: meowcloud.content.ContentService.DeletePhoto:output_type -> meowcloud.content.DeletePhotoResp
	19, // 31: meowcloud.content.ContentService.ListPhoto:output_type -> meowcloud.content.ListPhotoResp
	22, // [22:32] is the sub-list for method output_type
	12, // [12:22] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_meowcloud_content_content_proto_init() }
func file_meowcloud_content_content_proto_init() {
	if File_meowcloud_content_content_proto != nil {
		return
	}
	file_meowcloud_content_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_meowcloud_content_content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_meowcloud_content_content_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_meowcloud_content_content_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meowcloud_content_content_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meowcloud_content_content_proto_goTypes,
		DependencyIndexes: file_meowcloud_content_content_proto_depIdxs,
		MessageInfos:      file_meowcloud_content_content_proto_msgTypes,
	}.Build()
	File_meowcloud_content_content_proto = out.File
	file_meowcloud_content_content_proto_rawDesc = nil
	file_meowcloud_content_content_proto_goTypes = nil
	file_meowcloud_content_content_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.10.3. DO NOT EDIT.

type ContentService interface {
	CreateAlbum(ctx context.Context, req *CreateAlbumReq) (res *CreateAlbumResp, err error)
	RetrieveAlbum(ctx context.Context, req *RetrieveAlbumReq) (res *RetrieveAlbumResp, err error)
	UpdateAlbum(ctx context.Context, req *UpdateAlbumReq) (res *UpdateAlbumResp, err error)
	DeleteAlbum(ctx context.Context, req *DeleteAlbumReq) (res *DeleteAlbumResp, err error)
	ListAlbum(ctx context.Context, req *ListAlbumReq) (res *ListAlbumResp, err error)
	CreatePhoto(ctx context.Context, req *CreatePhotoReq) (res *CreatePhotoResp, err error)
	RetrievePhoto(ctx context.Context, req *RetrievePhotoReq) (res *RetrievePhotoResp, err error)
	UpdatePhoto(ctx context.Context, req *UpdatePhotoReq) (res *UpdatePhotoResp, err error)
	DeletePhoto(ctx context.Context, req *DeletePhotoReq) (res *DeletePhotoResp, err error)
	ListPhoto(ctx context.Context, req *ListPhotoReq) (res *ListPhotoResp, err error)
}
