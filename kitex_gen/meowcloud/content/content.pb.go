// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: meowcloud/content/content.proto

package content

import (
	context "context"
	basic "github.com/xh-polaris/service-idl-gen-go/kitex_gen/basic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RetrieveLocationAlbumType int32

const (
	RetrieveLocationAlbumType_ALL      RetrieveLocationAlbumType = 0
	RetrieveLocationAlbumType_NEARBY   RetrieveLocationAlbumType = 1
	RetrieveLocationAlbumType_FAVORITE RetrieveLocationAlbumType = 2
)

// Enum value maps for RetrieveLocationAlbumType.
var (
	RetrieveLocationAlbumType_name = map[int32]string{
		0: "ALL",
		1: "NEARBY",
		2: "FAVORITE",
	}
	RetrieveLocationAlbumType_value = map[string]int32{
		"ALL":      0,
		"NEARBY":   1,
		"FAVORITE": 2,
	}
)

func (x RetrieveLocationAlbumType) Enum() *RetrieveLocationAlbumType {
	p := new(RetrieveLocationAlbumType)
	*p = x
	return p
}

func (x RetrieveLocationAlbumType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetrieveLocationAlbumType) Descriptor() protoreflect.EnumDescriptor {
	return file_meowcloud_content_content_proto_enumTypes[0].Descriptor()
}

func (RetrieveLocationAlbumType) Type() protoreflect.EnumType {
	return &file_meowcloud_content_content_proto_enumTypes[0]
}

func (x RetrieveLocationAlbumType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetrieveLocationAlbumType.Descriptor instead.
func (RetrieveLocationAlbumType) EnumDescriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{0}
}

type CreateCatAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatAlbum *CatAlbum `protobuf:"bytes,1,opt,name=catAlbum,proto3" json:"catAlbum,omitempty"`
}

func (x *CreateCatAlbumReq) Reset() {
	*x = CreateCatAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCatAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatAlbumReq) ProtoMessage() {}

func (x *CreateCatAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatAlbumReq.ProtoReflect.Descriptor instead.
func (*CreateCatAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCatAlbumReq) GetCatAlbum() *CatAlbum {
	if x != nil {
		return x.CatAlbum
	}
	return nil
}

type CreateCatAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatAlbum *CatAlbum `protobuf:"bytes,1,opt,name=catAlbum,proto3" json:"catAlbum,omitempty"`
}

func (x *CreateCatAlbumResp) Reset() {
	*x = CreateCatAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCatAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatAlbumResp) ProtoMessage() {}

func (x *CreateCatAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatAlbumResp.ProtoReflect.Descriptor instead.
func (*CreateCatAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCatAlbumResp) GetCatAlbum() *CatAlbum {
	if x != nil {
		return x.CatAlbum
	}
	return nil
}

type RetrieveCatAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveCatAlbumReq) Reset() {
	*x = RetrieveCatAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCatAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCatAlbumReq) ProtoMessage() {}

func (x *RetrieveCatAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCatAlbumReq.ProtoReflect.Descriptor instead.
func (*RetrieveCatAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveCatAlbumReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrieveCatAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatAlbum *CatAlbum `protobuf:"bytes,1,opt,name=catAlbum,proto3" json:"catAlbum,omitempty"`
}

func (x *RetrieveCatAlbumResp) Reset() {
	*x = RetrieveCatAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCatAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCatAlbumResp) ProtoMessage() {}

func (x *RetrieveCatAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCatAlbumResp.ProtoReflect.Descriptor instead.
func (*RetrieveCatAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveCatAlbumResp) GetCatAlbum() *CatAlbum {
	if x != nil {
		return x.CatAlbum
	}
	return nil
}

type UpdateCatAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatAlbum *CatAlbum `protobuf:"bytes,1,opt,name=catAlbum,proto3" json:"catAlbum,omitempty"`
}

func (x *UpdateCatAlbumReq) Reset() {
	*x = UpdateCatAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCatAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatAlbumReq) ProtoMessage() {}

func (x *UpdateCatAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatAlbumReq.ProtoReflect.Descriptor instead.
func (*UpdateCatAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCatAlbumReq) GetCatAlbum() *CatAlbum {
	if x != nil {
		return x.CatAlbum
	}
	return nil
}

type UpdateCatAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatAlbum *CatAlbum `protobuf:"bytes,1,opt,name=catAlbum,proto3" json:"catAlbum,omitempty"`
}

func (x *UpdateCatAlbumResp) Reset() {
	*x = UpdateCatAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCatAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatAlbumResp) ProtoMessage() {}

func (x *UpdateCatAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatAlbumResp.ProtoReflect.Descriptor instead.
func (*UpdateCatAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCatAlbumResp) GetCatAlbum() *CatAlbum {
	if x != nil {
		return x.CatAlbum
	}
	return nil
}

type DeleteCatAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCatAlbumReq) Reset() {
	*x = DeleteCatAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatAlbumReq) ProtoMessage() {}

func (x *DeleteCatAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatAlbumReq.ProtoReflect.Descriptor instead.
func (*DeleteCatAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCatAlbumReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCatAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteCatAlbumResp) Reset() {
	*x = DeleteCatAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatAlbumResp) ProtoMessage() {}

func (x *DeleteCatAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatAlbumResp.ProtoReflect.Descriptor instead.
func (*DeleteCatAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCatAlbumResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListCatAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,1,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListCatAlbumReq) Reset() {
	*x = ListCatAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatAlbumReq) ProtoMessage() {}

func (x *ListCatAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatAlbumReq.ProtoReflect.Descriptor instead.
func (*ListCatAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{8}
}

func (x *ListCatAlbumReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListCatAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatAlbums []*CatAlbum `protobuf:"bytes,1,rep,name=catAlbums,proto3" json:"catAlbums,omitempty"`
	Total     int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListCatAlbumResp) Reset() {
	*x = ListCatAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatAlbumResp) ProtoMessage() {}

func (x *ListCatAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatAlbumResp.ProtoReflect.Descriptor instead.
func (*ListCatAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{9}
}

func (x *ListCatAlbumResp) GetCatAlbums() []*CatAlbum {
	if x != nil {
		return x.CatAlbums
	}
	return nil
}

func (x *ListCatAlbumResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreateLocationAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationAlbum *LocationAlbum `protobuf:"bytes,1,opt,name=locationAlbum,proto3" json:"locationAlbum,omitempty"`
}

func (x *CreateLocationAlbumReq) Reset() {
	*x = CreateLocationAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationAlbumReq) ProtoMessage() {}

func (x *CreateLocationAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationAlbumReq.ProtoReflect.Descriptor instead.
func (*CreateLocationAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{10}
}

func (x *CreateLocationAlbumReq) GetLocationAlbum() *LocationAlbum {
	if x != nil {
		return x.LocationAlbum
	}
	return nil
}

type CreateLocationAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationAlbum *LocationAlbum `protobuf:"bytes,1,opt,name=locationAlbum,proto3" json:"locationAlbum,omitempty"`
}

func (x *CreateLocationAlbumResp) Reset() {
	*x = CreateLocationAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocationAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocationAlbumResp) ProtoMessage() {}

func (x *CreateLocationAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocationAlbumResp.ProtoReflect.Descriptor instead.
func (*CreateLocationAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{11}
}

func (x *CreateLocationAlbumResp) GetLocationAlbum() *LocationAlbum {
	if x != nil {
		return x.LocationAlbum
	}
	return nil
}

type RetrieveLocationAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrieveLocationAlbumReq) Reset() {
	*x = RetrieveLocationAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLocationAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLocationAlbumReq) ProtoMessage() {}

func (x *RetrieveLocationAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLocationAlbumReq.ProtoReflect.Descriptor instead.
func (*RetrieveLocationAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{12}
}

func (x *RetrieveLocationAlbumReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrieveLocationAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationAlbum *LocationAlbum `protobuf:"bytes,1,opt,name=locationAlbum,proto3" json:"locationAlbum,omitempty"`
}

func (x *RetrieveLocationAlbumResp) Reset() {
	*x = RetrieveLocationAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLocationAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLocationAlbumResp) ProtoMessage() {}

func (x *RetrieveLocationAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLocationAlbumResp.ProtoReflect.Descriptor instead.
func (*RetrieveLocationAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{13}
}

func (x *RetrieveLocationAlbumResp) GetLocationAlbum() *LocationAlbum {
	if x != nil {
		return x.LocationAlbum
	}
	return nil
}

type UpdateLocationAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationAlbum *LocationAlbum `protobuf:"bytes,1,opt,name=locationAlbum,proto3" json:"locationAlbum,omitempty"`
}

func (x *UpdateLocationAlbumReq) Reset() {
	*x = UpdateLocationAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationAlbumReq) ProtoMessage() {}

func (x *UpdateLocationAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationAlbumReq.ProtoReflect.Descriptor instead.
func (*UpdateLocationAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateLocationAlbumReq) GetLocationAlbum() *LocationAlbum {
	if x != nil {
		return x.LocationAlbum
	}
	return nil
}

type UpdateLocationAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationAlbum *LocationAlbum `protobuf:"bytes,1,opt,name=locationAlbum,proto3" json:"locationAlbum,omitempty"`
}

func (x *UpdateLocationAlbumResp) Reset() {
	*x = UpdateLocationAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocationAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocationAlbumResp) ProtoMessage() {}

func (x *UpdateLocationAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocationAlbumResp.ProtoReflect.Descriptor instead.
func (*UpdateLocationAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateLocationAlbumResp) GetLocationAlbum() *LocationAlbum {
	if x != nil {
		return x.LocationAlbum
	}
	return nil
}

type DeleteLocationAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteLocationAlbumReq) Reset() {
	*x = DeleteLocationAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationAlbumReq) ProtoMessage() {}

func (x *DeleteLocationAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationAlbumReq.ProtoReflect.Descriptor instead.
func (*DeleteLocationAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteLocationAlbumReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteLocationAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLocationAlbumResp) Reset() {
	*x = DeleteLocationAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocationAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocationAlbumResp) ProtoMessage() {}

func (x *DeleteLocationAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocationAlbumResp.ProtoReflect.Descriptor instead.
func (*DeleteLocationAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{17}
}

type ListLocationAlbumReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationOptions *basic.PaginationOptions   `protobuf:"bytes,1,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
	Type              *RetrieveLocationAlbumType `protobuf:"varint,2,opt,name=type,proto3,enum=meowcloud.content.RetrieveLocationAlbumType,oneof" json:"type,omitempty"`
}

func (x *ListLocationAlbumReq) Reset() {
	*x = ListLocationAlbumReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocationAlbumReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocationAlbumReq) ProtoMessage() {}

func (x *ListLocationAlbumReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocationAlbumReq.ProtoReflect.Descriptor instead.
func (*ListLocationAlbumReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{18}
}

func (x *ListLocationAlbumReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

func (x *ListLocationAlbumReq) GetType() RetrieveLocationAlbumType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return RetrieveLocationAlbumType_ALL
}

type ListLocationAlbumResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationAlbums []*LocationAlbum `protobuf:"bytes,1,rep,name=locationAlbums,proto3" json:"locationAlbums,omitempty"`
	Total          int64            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListLocationAlbumResp) Reset() {
	*x = ListLocationAlbumResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocationAlbumResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocationAlbumResp) ProtoMessage() {}

func (x *ListLocationAlbumResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocationAlbumResp.ProtoReflect.Descriptor instead.
func (*ListLocationAlbumResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{19}
}

func (x *ListLocationAlbumResp) GetLocationAlbums() []*LocationAlbum {
	if x != nil {
		return x.LocationAlbums
	}
	return nil
}

func (x *ListLocationAlbumResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CreatePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *CreatePhotoReq) Reset() {
	*x = CreatePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoReq) ProtoMessage() {}

func (x *CreatePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoReq.ProtoReflect.Descriptor instead.
func (*CreatePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{20}
}

func (x *CreatePhotoReq) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type CreatePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *CreatePhotoResp) Reset() {
	*x = CreatePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePhotoResp) ProtoMessage() {}

func (x *CreatePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePhotoResp.ProtoReflect.Descriptor instead.
func (*CreatePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{21}
}

func (x *CreatePhotoResp) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type RetrievePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RetrievePhotoReq) Reset() {
	*x = RetrievePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePhotoReq) ProtoMessage() {}

func (x *RetrievePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePhotoReq.ProtoReflect.Descriptor instead.
func (*RetrievePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{22}
}

func (x *RetrievePhotoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RetrievePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *RetrievePhotoResp) Reset() {
	*x = RetrievePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePhotoResp) ProtoMessage() {}

func (x *RetrievePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePhotoResp.ProtoReflect.Descriptor instead.
func (*RetrievePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{23}
}

func (x *RetrievePhotoResp) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type UpdatePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *UpdatePhotoReq) Reset() {
	*x = UpdatePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoReq) ProtoMessage() {}

func (x *UpdatePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoReq.ProtoReflect.Descriptor instead.
func (*UpdatePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{24}
}

func (x *UpdatePhotoReq) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type UpdatePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photo *Photo `protobuf:"bytes,1,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *UpdatePhotoResp) Reset() {
	*x = UpdatePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhotoResp) ProtoMessage() {}

func (x *UpdatePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhotoResp.ProtoReflect.Descriptor instead.
func (*UpdatePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{25}
}

func (x *UpdatePhotoResp) GetPhoto() *Photo {
	if x != nil {
		return x.Photo
	}
	return nil
}

type DeletePhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePhotoReq) Reset() {
	*x = DeletePhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhotoReq) ProtoMessage() {}

func (x *DeletePhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhotoReq.ProtoReflect.Descriptor instead.
func (*DeletePhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{26}
}

func (x *DeletePhotoReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePhotoResp) Reset() {
	*x = DeletePhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePhotoResp) ProtoMessage() {}

func (x *DeletePhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePhotoResp.ProtoReflect.Descriptor instead.
func (*DeletePhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{27}
}

type ListPhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,1,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListPhotoReq) Reset() {
	*x = ListPhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhotoReq) ProtoMessage() {}

func (x *ListPhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhotoReq.ProtoReflect.Descriptor instead.
func (*ListPhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{28}
}

func (x *ListPhotoReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListPhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photos []*Photo `protobuf:"bytes,1,rep,name=photos,proto3" json:"photos,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPhotoResp) Reset() {
	*x = ListPhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPhotoResp) ProtoMessage() {}

func (x *ListPhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPhotoResp.ProtoReflect.Descriptor instead.
func (*ListPhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{29}
}

func (x *ListPhotoResp) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *ListPhotoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListFeaturedPhotoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,1,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListFeaturedPhotoReq) Reset() {
	*x = ListFeaturedPhotoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturedPhotoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturedPhotoReq) ProtoMessage() {}

func (x *ListFeaturedPhotoReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturedPhotoReq.ProtoReflect.Descriptor instead.
func (*ListFeaturedPhotoReq) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{30}
}

func (x *ListFeaturedPhotoReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListFeaturedPhotoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Photos []*Photo `protobuf:"bytes,1,rep,name=photos,proto3" json:"photos,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListFeaturedPhotoResp) Reset() {
	*x = ListFeaturedPhotoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowcloud_content_content_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFeaturedPhotoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturedPhotoResp) ProtoMessage() {}

func (x *ListFeaturedPhotoResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowcloud_content_content_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturedPhotoResp.ProtoReflect.Descriptor instead.
func (*ListFeaturedPhotoResp) Descriptor() ([]byte, []int) {
	return file_meowcloud_content_content_proto_rawDescGZIP(), []int{31}
}

func (x *ListFeaturedPhotoResp) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *ListFeaturedPhotoResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_meowcloud_content_content_proto protoreflect.FileDescriptor

var file_meowcloud_content_content_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x11, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4c, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x52, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x4d, 0x0a, 0x12, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x25, 0x0a, 0x13, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x4f, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x22, 0x4c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22,
	0x4d, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x23,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a,
	0x09, 0x63, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x09, 0x63,
	0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x60,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x46, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x22, 0x61, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x63, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x22, 0x60, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x46,
	0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x61, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x46, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc9,
	0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x11,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x77, 0x0a, 0x15, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x40, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x11,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74,
	0x6f, 0x22, 0x40, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x22, 0x41, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x71, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x4b, 0x0a, 0x11, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x57,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x30, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x5f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x06, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x2a, 0x3e, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x45, 0x41,
	0x52, 0x42, 0x59, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x56, 0x4f, 0x52, 0x49, 0x54,
	0x45, 0x10, 0x02, 0x32, 0xa7, 0x0c, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x25,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x26, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61,
	0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x24, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5d, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x24, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x25, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x57, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6c, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x72, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x6c, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12, 0x29, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x62, 0x75, 0x6d, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c,
	0x62, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a,
	0x0d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x23,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x54, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x21,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x66, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x42, 0x7e, 0x0a,
	0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x68, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x69,
	0x64, 0x6c, 0x67, 0x65, 0x6e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x68, 0x2d, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x69, 0x64, 0x6c, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67,
	0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meowcloud_content_content_proto_rawDescOnce sync.Once
	file_meowcloud_content_content_proto_rawDescData = file_meowcloud_content_content_proto_rawDesc
)

func file_meowcloud_content_content_proto_rawDescGZIP() []byte {
	file_meowcloud_content_content_proto_rawDescOnce.Do(func() {
		file_meowcloud_content_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_meowcloud_content_content_proto_rawDescData)
	})
	return file_meowcloud_content_content_proto_rawDescData
}

var file_meowcloud_content_content_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_meowcloud_content_content_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_meowcloud_content_content_proto_goTypes = []interface{}{
	(RetrieveLocationAlbumType)(0),    // 0: meowcloud.content.RetrieveLocationAlbumType
	(*CreateCatAlbumReq)(nil),         // 1: meowcloud.content.CreateCatAlbumReq
	(*CreateCatAlbumResp)(nil),        // 2: meowcloud.content.CreateCatAlbumResp
	(*RetrieveCatAlbumReq)(nil),       // 3: meowcloud.content.RetrieveCatAlbumReq
	(*RetrieveCatAlbumResp)(nil),      // 4: meowcloud.content.RetrieveCatAlbumResp
	(*UpdateCatAlbumReq)(nil),         // 5: meowcloud.content.UpdateCatAlbumReq
	(*UpdateCatAlbumResp)(nil),        // 6: meowcloud.content.UpdateCatAlbumResp
	(*DeleteCatAlbumReq)(nil),         // 7: meowcloud.content.DeleteCatAlbumReq
	(*DeleteCatAlbumResp)(nil),        // 8: meowcloud.content.DeleteCatAlbumResp
	(*ListCatAlbumReq)(nil),           // 9: meowcloud.content.ListCatAlbumReq
	(*ListCatAlbumResp)(nil),          // 10: meowcloud.content.ListCatAlbumResp
	(*CreateLocationAlbumReq)(nil),    // 11: meowcloud.content.CreateLocationAlbumReq
	(*CreateLocationAlbumResp)(nil),   // 12: meowcloud.content.CreateLocationAlbumResp
	(*RetrieveLocationAlbumReq)(nil),  // 13: meowcloud.content.RetrieveLocationAlbumReq
	(*RetrieveLocationAlbumResp)(nil), // 14: meowcloud.content.RetrieveLocationAlbumResp
	(*UpdateLocationAlbumReq)(nil),    // 15: meowcloud.content.UpdateLocationAlbumReq
	(*UpdateLocationAlbumResp)(nil),   // 16: meowcloud.content.UpdateLocationAlbumResp
	(*DeleteLocationAlbumReq)(nil),    // 17: meowcloud.content.DeleteLocationAlbumReq
	(*DeleteLocationAlbumResp)(nil),   // 18: meowcloud.content.DeleteLocationAlbumResp
	(*ListLocationAlbumReq)(nil),      // 19: meowcloud.content.ListLocationAlbumReq
	(*ListLocationAlbumResp)(nil),     // 20: meowcloud.content.ListLocationAlbumResp
	(*CreatePhotoReq)(nil),            // 21: meowcloud.content.CreatePhotoReq
	(*CreatePhotoResp)(nil),           // 22: meowcloud.content.CreatePhotoResp
	(*RetrievePhotoReq)(nil),          // 23: meowcloud.content.RetrievePhotoReq
	(*RetrievePhotoResp)(nil),         // 24: meowcloud.content.RetrievePhotoResp
	(*UpdatePhotoReq)(nil),            // 25: meowcloud.content.UpdatePhotoReq
	(*UpdatePhotoResp)(nil),           // 26: meowcloud.content.UpdatePhotoResp
	(*DeletePhotoReq)(nil),            // 27: meowcloud.content.DeletePhotoReq
	(*DeletePhotoResp)(nil),           // 28: meowcloud.content.DeletePhotoResp
	(*ListPhotoReq)(nil),              // 29: meowcloud.content.ListPhotoReq
	(*ListPhotoResp)(nil),             // 30: meowcloud.content.ListPhotoResp
	(*ListFeaturedPhotoReq)(nil),      // 31: meowcloud.content.ListFeaturedPhotoReq
	(*ListFeaturedPhotoResp)(nil),     // 32: meowcloud.content.ListFeaturedPhotoResp
	(*CatAlbum)(nil),                  // 33: meowcloud.content.CatAlbum
	(*basic.PaginationOptions)(nil),   // 34: basic.PaginationOptions
	(*LocationAlbum)(nil),             // 35: meowcloud.content.LocationAlbum
	(*Photo)(nil),                     // 36: meowcloud.content.Photo
}
var file_meowcloud_content_content_proto_depIdxs = []int32{
	33, // 0: meowcloud.content.CreateCatAlbumReq.catAlbum:type_name -> meowcloud.content.CatAlbum
	33, // 1: meowcloud.content.CreateCatAlbumResp.catAlbum:type_name -> meowcloud.content.CatAlbum
	33, // 2: meowcloud.content.RetrieveCatAlbumResp.catAlbum:type_name -> meowcloud.content.CatAlbum
	33, // 3: meowcloud.content.UpdateCatAlbumReq.catAlbum:type_name -> meowcloud.content.CatAlbum
	33, // 4: meowcloud.content.UpdateCatAlbumResp.catAlbum:type_name -> meowcloud.content.CatAlbum
	34, // 5: meowcloud.content.ListCatAlbumReq.paginationOptions:type_name -> basic.PaginationOptions
	33, // 6: meowcloud.content.ListCatAlbumResp.catAlbums:type_name -> meowcloud.content.CatAlbum
	35, // 7: meowcloud.content.CreateLocationAlbumReq.locationAlbum:type_name -> meowcloud.content.LocationAlbum
	35, // 8: meowcloud.content.CreateLocationAlbumResp.locationAlbum:type_name -> meowcloud.content.LocationAlbum
	35, // 9: meowcloud.content.RetrieveLocationAlbumResp.locationAlbum:type_name -> meowcloud.content.LocationAlbum
	35, // 10: meowcloud.content.UpdateLocationAlbumReq.locationAlbum:type_name -> meowcloud.content.LocationAlbum
	35, // 11: meowcloud.content.UpdateLocationAlbumResp.locationAlbum:type_name -> meowcloud.content.LocationAlbum
	34, // 12: meowcloud.content.ListLocationAlbumReq.paginationOptions:type_name -> basic.PaginationOptions
	0,  // 13: meowcloud.content.ListLocationAlbumReq.type:type_name -> meowcloud.content.RetrieveLocationAlbumType
	35, // 14: meowcloud.content.ListLocationAlbumResp.locationAlbums:type_name -> meowcloud.content.LocationAlbum
	36, // 15: meowcloud.content.CreatePhotoReq.photo:type_name -> meowcloud.content.Photo
	36, // 16: meowcloud.content.CreatePhotoResp.photo:type_name -> meowcloud.content.Photo
	36, // 17: meowcloud.content.RetrievePhotoResp.photo:type_name -> meowcloud.content.Photo
	36, // 18: meowcloud.content.UpdatePhotoReq.photo:type_name -> meowcloud.content.Photo
	36, // 19: meowcloud.content.UpdatePhotoResp.photo:type_name -> meowcloud.content.Photo
	34, // 20: meowcloud.content.ListPhotoReq.paginationOptions:type_name -> basic.PaginationOptions
	36, // 21: meowcloud.content.ListPhotoResp.photos:type_name -> meowcloud.content.Photo
	34, // 22: meowcloud.content.ListFeaturedPhotoReq.paginationOptions:type_name -> basic.PaginationOptions
	36, // 23: meowcloud.content.ListFeaturedPhotoResp.photos:type_name -> meowcloud.content.Photo
	1,  // 24: meowcloud.content.ContentService.CreateCatAlbum:input_type -> meowcloud.content.CreateCatAlbumReq
	3,  // 25: meowcloud.content.ContentService.RetrieveCatAlbum:input_type -> meowcloud.content.RetrieveCatAlbumReq
	5,  // 26: meowcloud.content.ContentService.UpdateCatAlbum:input_type -> meowcloud.content.UpdateCatAlbumReq
	7,  // 27: meowcloud.content.ContentService.DeleteCatAlbum:input_type -> meowcloud.content.DeleteCatAlbumReq
	9,  // 28: meowcloud.content.ContentService.ListCatAlbum:input_type -> meowcloud.content.ListCatAlbumReq
	11, // 29: meowcloud.content.ContentService.CreateLocationAlbum:input_type -> meowcloud.content.CreateLocationAlbumReq
	13, // 30: meowcloud.content.ContentService.RetrieveLocationAlbum:input_type -> meowcloud.content.RetrieveLocationAlbumReq
	15, // 31: meowcloud.content.ContentService.UpdateLocationAlbum:input_type -> meowcloud.content.UpdateLocationAlbumReq
	17, // 32: meowcloud.content.ContentService.DeleteLocationAlbum:input_type -> meowcloud.content.DeleteLocationAlbumReq
	19, // 33: meowcloud.content.ContentService.ListLocationAlbum:input_type -> meowcloud.content.ListLocationAlbumReq
	21, // 34: meowcloud.content.ContentService.CreatePhoto:input_type -> meowcloud.content.CreatePhotoReq
	23, // 35: meowcloud.content.ContentService.RetrievePhoto:input_type -> meowcloud.content.RetrievePhotoReq
	25, // 36: meowcloud.content.ContentService.UpdatePhoto:input_type -> meowcloud.content.UpdatePhotoReq
	27, // 37: meowcloud.content.ContentService.DeletePhoto:input_type -> meowcloud.content.DeletePhotoReq
	29, // 38: meowcloud.content.ContentService.ListPhoto:input_type -> meowcloud.content.ListPhotoReq
	31, // 39: meowcloud.content.ContentService.ListFeaturedPhoto:input_type -> meowcloud.content.ListFeaturedPhotoReq
	2,  // 40: meowcloud.content.ContentService.CreateCatAlbum:output_type -> meowcloud.content.CreateCatAlbumResp
	4,  // 41: meowcloud.content.ContentService.RetrieveCatAlbum:output_type -> meowcloud.content.RetrieveCatAlbumResp
	6,  // 42: meowcloud.content.ContentService.UpdateCatAlbum:output_type -> meowcloud.content.UpdateCatAlbumResp
	8,  // 43: meowcloud.content.ContentService.DeleteCatAlbum:output_type -> meowcloud.content.DeleteCatAlbumResp
	10, // 44: meowcloud.content.ContentService.ListCatAlbum:output_type -> meowcloud.content.ListCatAlbumResp
	12, // 45: meowcloud.content.ContentService.CreateLocationAlbum:output_type -> meowcloud.content.CreateLocationAlbumResp
	14, // 46: meowcloud.content.ContentService.RetrieveLocationAlbum:output_type -> meowcloud.content.RetrieveLocationAlbumResp
	16, // 47: meowcloud.content.ContentService.UpdateLocationAlbum:output_type -> meowcloud.content.UpdateLocationAlbumResp
	18, // 48: meowcloud.content.ContentService.DeleteLocationAlbum:output_type -> meowcloud.content.DeleteLocationAlbumResp
	20, // 49: meowcloud.content.ContentService.ListLocationAlbum:output_type -> meowcloud.content.ListLocationAlbumResp
	22, // 50: meowcloud.content.ContentService.CreatePhoto:output_type -> meowcloud.content.CreatePhotoResp
	24, // 51: meowcloud.content.ContentService.RetrievePhoto:output_type -> meowcloud.content.RetrievePhotoResp
	26, // 52: meowcloud.content.ContentService.UpdatePhoto:output_type -> meowcloud.content.UpdatePhotoResp
	28, // 53: meowcloud.content.ContentService.DeletePhoto:output_type -> meowcloud.content.DeletePhotoResp
	30, // 54: meowcloud.content.ContentService.ListPhoto:output_type -> meowcloud.content.ListPhotoResp
	32, // 55: meowcloud.content.ContentService.ListFeaturedPhoto:output_type -> meowcloud.content.ListFeaturedPhotoResp
	40, // [40:56] is the sub-list for method output_type
	24, // [24:40] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_meowcloud_content_content_proto_init() }
func file_meowcloud_content_content_proto_init() {
	if File_meowcloud_content_content_proto != nil {
		return
	}
	file_meowcloud_content_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_meowcloud_content_content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCatAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCatAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCatAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCatAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCatAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCatAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocationAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLocationAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLocationAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocationAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocationAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocationAlbumReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocationAlbumResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturedPhotoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowcloud_content_content_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFeaturedPhotoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_meowcloud_content_content_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_meowcloud_content_content_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_meowcloud_content_content_proto_msgTypes[28].OneofWrappers = []interface{}{}
	file_meowcloud_content_content_proto_msgTypes[30].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meowcloud_content_content_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meowcloud_content_content_proto_goTypes,
		DependencyIndexes: file_meowcloud_content_content_proto_depIdxs,
		EnumInfos:         file_meowcloud_content_content_proto_enumTypes,
		MessageInfos:      file_meowcloud_content_content_proto_msgTypes,
	}.Build()
	File_meowcloud_content_content_proto = out.File
	file_meowcloud_content_content_proto_rawDesc = nil
	file_meowcloud_content_content_proto_goTypes = nil
	file_meowcloud_content_content_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.11.3. DO NOT EDIT.

type ContentService interface {
	CreateCatAlbum(ctx context.Context, req *CreateCatAlbumReq) (res *CreateCatAlbumResp, err error)
	RetrieveCatAlbum(ctx context.Context, req *RetrieveCatAlbumReq) (res *RetrieveCatAlbumResp, err error)
	UpdateCatAlbum(ctx context.Context, req *UpdateCatAlbumReq) (res *UpdateCatAlbumResp, err error)
	DeleteCatAlbum(ctx context.Context, req *DeleteCatAlbumReq) (res *DeleteCatAlbumResp, err error)
	ListCatAlbum(ctx context.Context, req *ListCatAlbumReq) (res *ListCatAlbumResp, err error)
	CreateLocationAlbum(ctx context.Context, req *CreateLocationAlbumReq) (res *CreateLocationAlbumResp, err error)
	RetrieveLocationAlbum(ctx context.Context, req *RetrieveLocationAlbumReq) (res *RetrieveLocationAlbumResp, err error)
	UpdateLocationAlbum(ctx context.Context, req *UpdateLocationAlbumReq) (res *UpdateLocationAlbumResp, err error)
	DeleteLocationAlbum(ctx context.Context, req *DeleteLocationAlbumReq) (res *DeleteLocationAlbumResp, err error)
	ListLocationAlbum(ctx context.Context, req *ListLocationAlbumReq) (res *ListLocationAlbumResp, err error)
	CreatePhoto(ctx context.Context, req *CreatePhotoReq) (res *CreatePhotoResp, err error)
	RetrievePhoto(ctx context.Context, req *RetrievePhotoReq) (res *RetrievePhotoResp, err error)
	UpdatePhoto(ctx context.Context, req *UpdatePhotoReq) (res *UpdatePhotoResp, err error)
	DeletePhoto(ctx context.Context, req *DeletePhotoReq) (res *DeletePhotoResp, err error)
	ListPhoto(ctx context.Context, req *ListPhotoReq) (res *ListPhotoResp, err error)
	ListFeaturedPhoto(ctx context.Context, req *ListFeaturedPhotoReq) (res *ListFeaturedPhotoResp, err error)
}
