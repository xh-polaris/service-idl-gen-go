// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: meowchat/content/content.proto

package content

import (
	context "context"
	basic "github.com/xh-polaris/service-idl-gen-go/kitex_gen/basic"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       int64  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // 获取的数量
	Skip        int64  `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`   //跳过前skip个
	CommunityId string `protobuf:"bytes,3,opt,name=communityId,proto3" json:"communityId,omitempty"`
	Keyword     string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchCatReq) Reset() {
	*x = SearchCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCatReq) ProtoMessage() {}

func (x *SearchCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCatReq.ProtoReflect.Descriptor instead.
func (*SearchCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{0}
}

func (x *SearchCatReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchCatReq) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *SearchCatReq) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *SearchCatReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats  []*Cat `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats,omitempty"`
	Total int64  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchCatResp) Reset() {
	*x = SearchCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCatResp) ProtoMessage() {}

func (x *SearchCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCatResp.ProtoReflect.Descriptor instead.
func (*SearchCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{1}
}

func (x *SearchCatResp) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *SearchCatResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommunityId string `protobuf:"bytes,1,opt,name=communityId,proto3" json:"communityId,omitempty"`
	Count       int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // 获取的数量
	Skip        int64  `protobuf:"varint,3,opt,name=skip,proto3" json:"skip,omitempty"`   //跳过前skip个
}

func (x *ListCatReq) Reset() {
	*x = ListCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatReq) ProtoMessage() {}

func (x *ListCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatReq.ProtoReflect.Descriptor instead.
func (*ListCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{2}
}

func (x *ListCatReq) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *ListCatReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListCatReq) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type ListCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats  []*Cat `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats,omitempty"`
	Total int64  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListCatResp) Reset() {
	*x = ListCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatResp) ProtoMessage() {}

func (x *ListCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatResp.ProtoReflect.Descriptor instead.
func (*ListCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{3}
}

func (x *ListCatResp) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *ListCatResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RetrieveCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
}

func (x *RetrieveCatReq) Reset() {
	*x = RetrieveCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCatReq) ProtoMessage() {}

func (x *RetrieveCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCatReq.ProtoReflect.Descriptor instead.
func (*RetrieveCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveCatReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type RetrieveCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cat *Cat `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat,omitempty"`
}

func (x *RetrieveCatResp) Reset() {
	*x = RetrieveCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCatResp) ProtoMessage() {}

func (x *RetrieveCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCatResp.ProtoReflect.Descriptor instead.
func (*RetrieveCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveCatResp) GetCat() *Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type CreateCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cat *Cat `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat,omitempty"`
}

func (x *CreateCatReq) Reset() {
	*x = CreateCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatReq) ProtoMessage() {}

func (x *CreateCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatReq.ProtoReflect.Descriptor instead.
func (*CreateCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCatReq) GetCat() *Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type CreateCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
}

func (x *CreateCatResp) Reset() {
	*x = CreateCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatResp) ProtoMessage() {}

func (x *CreateCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatResp.ProtoReflect.Descriptor instead.
func (*CreateCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCatResp) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type UpdateCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cat *Cat `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat,omitempty"`
}

func (x *UpdateCatReq) Reset() {
	*x = UpdateCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatReq) ProtoMessage() {}

func (x *UpdateCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatReq.ProtoReflect.Descriptor instead.
func (*UpdateCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCatReq) GetCat() *Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type UpdateCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCatResp) Reset() {
	*x = UpdateCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatResp) ProtoMessage() {}

func (x *UpdateCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatResp.ProtoReflect.Descriptor instead.
func (*UpdateCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{9}
}

type DeleteCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
}

func (x *DeleteCatReq) Reset() {
	*x = DeleteCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatReq) ProtoMessage() {}

func (x *DeleteCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatReq.ProtoReflect.Descriptor instead.
func (*DeleteCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCatReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type DeleteCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCatResp) Reset() {
	*x = DeleteCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatResp) ProtoMessage() {}

func (x *DeleteCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatResp.ProtoReflect.Descriptor instead.
func (*DeleteCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{11}
}

type CreateImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*CreateImageElement `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *CreateImageReq) Reset() {
	*x = CreateImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageReq) ProtoMessage() {}

func (x *CreateImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageReq.ProtoReflect.Descriptor instead.
func (*CreateImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{12}
}

func (x *CreateImageReq) GetImages() []*CreateImageElement {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageIds []string `protobuf:"bytes,1,rep,name=imageIds,proto3" json:"imageIds,omitempty"`
}

func (x *CreateImageResp) Reset() {
	*x = CreateImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResp) ProtoMessage() {}

func (x *CreateImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResp.ProtoReflect.Descriptor instead.
func (*CreateImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{13}
}

func (x *CreateImageResp) GetImageIds() []string {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

type DeleteImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,1,opt,name=imageId,proto3" json:"imageId,omitempty"`
}

func (x *DeleteImageReq) Reset() {
	*x = DeleteImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageReq) ProtoMessage() {}

func (x *DeleteImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageReq.ProtoReflect.Descriptor instead.
func (*DeleteImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteImageReq) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteImageResp) Reset() {
	*x = DeleteImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResp) ProtoMessage() {}

func (x *DeleteImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResp.ProtoReflect.Descriptor instead.
func (*DeleteImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{15}
}

type ListImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId    string  `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
	PrevId   *string `protobuf:"bytes,2,opt,name=prevId,proto3,oneof" json:"prevId,omitempty"`
	Limit    int64   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int64   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Backward bool    `protobuf:"varint,5,opt,name=backward,proto3" json:"backward,omitempty"`
}

func (x *ListImageReq) Reset() {
	*x = ListImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageReq) ProtoMessage() {}

func (x *ListImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageReq.ProtoReflect.Descriptor instead.
func (*ListImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{16}
}

func (x *ListImageReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

func (x *ListImageReq) GetPrevId() string {
	if x != nil && x.PrevId != nil {
		return *x.PrevId
	}
	return ""
}

func (x *ListImageReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListImageReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListImageReq) GetBackward() bool {
	if x != nil {
		return x.Backward
	}
	return false
}

type ListImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListImageResp) Reset() {
	*x = ListImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageResp) ProtoMessage() {}

func (x *ListImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageResp.ProtoReflect.Descriptor instead.
func (*ListImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{17}
}

func (x *ListImageResp) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ListImageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchOptions     *SearchOptions           `protobuf:"bytes,1,opt,name=searchOptions,proto3,oneof" json:"searchOptions,omitempty"`
	FilterOptions     *MomentFilterOptions     `protobuf:"bytes,2,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,3,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListMomentReq) Reset() {
	*x = ListMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMomentReq) ProtoMessage() {}

func (x *ListMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMomentReq.ProtoReflect.Descriptor instead.
func (*ListMomentReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{18}
}

func (x *ListMomentReq) GetSearchOptions() *SearchOptions {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *ListMomentReq) GetFilterOptions() *MomentFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

func (x *ListMomentReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moments []*Moment `protobuf:"bytes,1,rep,name=moments,proto3" json:"moments,omitempty"`
	Total   int64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token   string    `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListMomentResp) Reset() {
	*x = ListMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMomentResp) ProtoMessage() {}

func (x *ListMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMomentResp.ProtoReflect.Descriptor instead.
func (*ListMomentResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{19}
}

func (x *ListMomentResp) GetMoments() []*Moment {
	if x != nil {
		return x.Moments
	}
	return nil
}

func (x *ListMomentResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMomentResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CountMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchOptions *SearchOptions       `protobuf:"bytes,1,opt,name=searchOptions,proto3,oneof" json:"searchOptions,omitempty"`
	FilterOptions *MomentFilterOptions `protobuf:"bytes,2,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
}

func (x *CountMomentReq) Reset() {
	*x = CountMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMomentReq) ProtoMessage() {}

func (x *CountMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMomentReq.ProtoReflect.Descriptor instead.
func (*CountMomentReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{20}
}

func (x *CountMomentReq) GetSearchOptions() *SearchOptions {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *CountMomentReq) GetFilterOptions() *MomentFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

type CountMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountMomentResp) Reset() {
	*x = CountMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountMomentResp) ProtoMessage() {}

func (x *CountMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountMomentResp.ProtoReflect.Descriptor instead.
func (*CountMomentResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{21}
}

func (x *CountMomentResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RetrieveMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentId string `protobuf:"bytes,1,opt,name=momentId,proto3" json:"momentId,omitempty"`
}

func (x *RetrieveMomentReq) Reset() {
	*x = RetrieveMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMomentReq) ProtoMessage() {}

func (x *RetrieveMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMomentReq.ProtoReflect.Descriptor instead.
func (*RetrieveMomentReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{22}
}

func (x *RetrieveMomentReq) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

type RetrieveMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moment *Moment `protobuf:"bytes,1,opt,name=moment,proto3" json:"moment,omitempty"`
}

func (x *RetrieveMomentResp) Reset() {
	*x = RetrieveMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMomentResp) ProtoMessage() {}

func (x *RetrieveMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMomentResp.ProtoReflect.Descriptor instead.
func (*RetrieveMomentResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{23}
}

func (x *RetrieveMomentResp) GetMoment() *Moment {
	if x != nil {
		return x.Moment
	}
	return nil
}

type CreateMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moment *Moment `protobuf:"bytes,1,opt,name=moment,proto3" json:"moment,omitempty"`
}

func (x *CreateMomentReq) Reset() {
	*x = CreateMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMomentReq) ProtoMessage() {}

func (x *CreateMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMomentReq.ProtoReflect.Descriptor instead.
func (*CreateMomentReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{24}
}

func (x *CreateMomentReq) GetMoment() *Moment {
	if x != nil {
		return x.Moment
	}
	return nil
}

type CreateMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentId     string `protobuf:"bytes,1,opt,name=momentId,proto3" json:"momentId,omitempty"`
	GetFish      bool   `protobuf:"varint,2,opt,name=getFish,proto3" json:"getFish,omitempty"`
	GetFishTimes int64  `protobuf:"varint,3,opt,name=getFishTimes,proto3" json:"getFishTimes,omitempty"`
}

func (x *CreateMomentResp) Reset() {
	*x = CreateMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMomentResp) ProtoMessage() {}

func (x *CreateMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMomentResp.ProtoReflect.Descriptor instead.
func (*CreateMomentResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{25}
}

func (x *CreateMomentResp) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

func (x *CreateMomentResp) GetGetFish() bool {
	if x != nil {
		return x.GetFish
	}
	return false
}

func (x *CreateMomentResp) GetGetFishTimes() int64 {
	if x != nil {
		return x.GetFishTimes
	}
	return 0
}

type UpdateMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moment *Moment `protobuf:"bytes,1,opt,name=moment,proto3" json:"moment,omitempty"`
}

func (x *UpdateMomentReq) Reset() {
	*x = UpdateMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMomentReq) ProtoMessage() {}

func (x *UpdateMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMomentReq.ProtoReflect.Descriptor instead.
func (*UpdateMomentReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateMomentReq) GetMoment() *Moment {
	if x != nil {
		return x.Moment
	}
	return nil
}

type UpdateMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMomentResp) Reset() {
	*x = UpdateMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMomentResp) ProtoMessage() {}

func (x *UpdateMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMomentResp.ProtoReflect.Descriptor instead.
func (*UpdateMomentResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{27}
}

type DeleteMomentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MomentId string `protobuf:"bytes,1,opt,name=momentId,proto3" json:"momentId,omitempty"`
}

func (x *DeleteMomentReq) Reset() {
	*x = DeleteMomentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMomentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMomentReq) ProtoMessage() {}

func (x *DeleteMomentReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMomentReq.ProtoReflect.Descriptor instead.
func (*DeleteMomentReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteMomentReq) GetMomentId() string {
	if x != nil {
		return x.MomentId
	}
	return ""
}

type DeleteMomentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMomentResp) Reset() {
	*x = DeleteMomentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMomentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMomentResp) ProtoMessage() {}

func (x *DeleteMomentResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMomentResp.ProtoReflect.Descriptor instead.
func (*DeleteMomentResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{29}
}

// create a post
type CreatePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Text     string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	CoverUrl string   `protobuf:"bytes,4,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`
	Tags     []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	UserId   string   `protobuf:"bytes,6,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CreatePostReq) Reset() {
	*x = CreatePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostReq) ProtoMessage() {}

func (x *CreatePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostReq.ProtoReflect.Descriptor instead.
func (*CreatePostReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{30}
}

func (x *CreatePostReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePostReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreatePostReq) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *CreatePostReq) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreatePostReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CreatePostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId       string `protobuf:"bytes,1,opt,name=postId,proto3" json:"postId,omitempty"`
	GetFish      bool   `protobuf:"varint,2,opt,name=getFish,proto3" json:"getFish,omitempty"`
	GetFishTimes int64  `protobuf:"varint,3,opt,name=getFishTimes,proto3" json:"getFishTimes,omitempty"`
}

func (x *CreatePostResp) Reset() {
	*x = CreatePostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostResp) ProtoMessage() {}

func (x *CreatePostResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostResp.ProtoReflect.Descriptor instead.
func (*CreatePostResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{31}
}

func (x *CreatePostResp) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *CreatePostResp) GetGetFish() bool {
	if x != nil {
		return x.GetFish
	}
	return false
}

func (x *CreatePostResp) GetGetFishTimes() int64 {
	if x != nil {
		return x.GetFishTimes
	}
	return 0
}

// retrieve a post
type RetrievePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId string `protobuf:"bytes,1,opt,name=postId,proto3" json:"postId,omitempty"`
}

func (x *RetrievePostReq) Reset() {
	*x = RetrievePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePostReq) ProtoMessage() {}

func (x *RetrievePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePostReq.ProtoReflect.Descriptor instead.
func (*RetrievePostReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{32}
}

func (x *RetrievePostReq) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

type RetrievePostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Post *Post `protobuf:"bytes,1,opt,name=post,proto3" json:"post,omitempty"`
}

func (x *RetrievePostResp) Reset() {
	*x = RetrievePostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePostResp) ProtoMessage() {}

func (x *RetrievePostResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePostResp.ProtoReflect.Descriptor instead.
func (*RetrievePostResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{33}
}

func (x *RetrievePostResp) GetPost() *Post {
	if x != nil {
		return x.Post
	}
	return nil
}

// update a post
type UpdatePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Text     string   `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	CoverUrl string   `protobuf:"bytes,5,opt,name=coverUrl,proto3" json:"coverUrl,omitempty"`
	Tags     []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UpdatePostReq) Reset() {
	*x = UpdatePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostReq) ProtoMessage() {}

func (x *UpdatePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostReq.ProtoReflect.Descriptor instead.
func (*UpdatePostReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{34}
}

func (x *UpdatePostReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatePostReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdatePostReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *UpdatePostReq) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *UpdatePostReq) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdatePostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePostResp) Reset() {
	*x = UpdatePostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePostResp) ProtoMessage() {}

func (x *UpdatePostResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePostResp.ProtoReflect.Descriptor instead.
func (*UpdatePostResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{35}
}

// delete a post
type DeletePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePostReq) Reset() {
	*x = DeletePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostReq) ProtoMessage() {}

func (x *DeletePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostReq.ProtoReflect.Descriptor instead.
func (*DeletePostReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{36}
}

func (x *DeletePostReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePostResp) Reset() {
	*x = DeletePostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostResp) ProtoMessage() {}

func (x *DeletePostResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostResp.ProtoReflect.Descriptor instead.
func (*DeletePostResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{37}
}

// list posts
type ListPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchOptions     *SearchOptions           `protobuf:"bytes,1,opt,name=searchOptions,proto3,oneof" json:"searchOptions,omitempty"`
	FilterOptions     *PostFilterOptions       `protobuf:"bytes,2,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,3,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListPostReq) Reset() {
	*x = ListPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostReq) ProtoMessage() {}

func (x *ListPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostReq.ProtoReflect.Descriptor instead.
func (*ListPostReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{38}
}

func (x *ListPostReq) GetSearchOptions() *SearchOptions {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *ListPostReq) GetFilterOptions() *PostFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

func (x *ListPostReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListPostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts []*Post `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token string  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListPostResp) Reset() {
	*x = ListPostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPostResp) ProtoMessage() {}

func (x *ListPostResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPostResp.ProtoReflect.Descriptor instead.
func (*ListPostResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{39}
}

func (x *ListPostResp) GetPosts() []*Post {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *ListPostResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPostResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CountPostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchOptions *SearchOptions     `protobuf:"bytes,1,opt,name=searchOptions,proto3,oneof" json:"searchOptions,omitempty"`
	FilterOptions *PostFilterOptions `protobuf:"bytes,2,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
}

func (x *CountPostReq) Reset() {
	*x = CountPostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostReq) ProtoMessage() {}

func (x *CountPostReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostReq.ProtoReflect.Descriptor instead.
func (*CountPostReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{40}
}

func (x *CountPostReq) GetSearchOptions() *SearchOptions {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *CountPostReq) GetFilterOptions() *PostFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

type CountPostResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountPostResp) Reset() {
	*x = CountPostResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPostResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPostResp) ProtoMessage() {}

func (x *CountPostResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPostResp.ProtoReflect.Descriptor instead.
func (*CountPostResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{41}
}

func (x *CountPostResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SetOfficialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId   string `protobuf:"bytes,1,opt,name=postId,proto3" json:"postId,omitempty"`
	IsRemove bool   `protobuf:"varint,2,opt,name=isRemove,proto3" json:"isRemove,omitempty"`
}

func (x *SetOfficialReq) Reset() {
	*x = SetOfficialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOfficialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOfficialReq) ProtoMessage() {}

func (x *SetOfficialReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOfficialReq.ProtoReflect.Descriptor instead.
func (*SetOfficialReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{42}
}

func (x *SetOfficialReq) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *SetOfficialReq) GetIsRemove() bool {
	if x != nil {
		return x.IsRemove
	}
	return false
}

type SetOfficialResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetOfficialResp) Reset() {
	*x = SetOfficialResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOfficialResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOfficialResp) ProtoMessage() {}

func (x *SetOfficialResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOfficialResp.ProtoReflect.Descriptor instead.
func (*SetOfficialResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{43}
}

type ListPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchOptions     *SearchOptions           `protobuf:"bytes,1,opt,name=searchOptions,proto3,oneof" json:"searchOptions,omitempty"`
	FilterOptions     *PlanFilterOptions       `protobuf:"bytes,2,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,3,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListPlanReq) Reset() {
	*x = ListPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanReq) ProtoMessage() {}

func (x *ListPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanReq.ProtoReflect.Descriptor instead.
func (*ListPlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{44}
}

func (x *ListPlanReq) GetSearchOptions() *SearchOptions {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *ListPlanReq) GetFilterOptions() *PlanFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

func (x *ListPlanReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token string  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListPlanResp) Reset() {
	*x = ListPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanResp) ProtoMessage() {}

func (x *ListPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanResp.ProtoReflect.Descriptor instead.
func (*ListPlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{45}
}

func (x *ListPlanResp) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *ListPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPlanResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CountPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchOptions *SearchOptions     `protobuf:"bytes,1,opt,name=searchOptions,proto3,oneof" json:"searchOptions,omitempty"`
	FilterOptions *PlanFilterOptions `protobuf:"bytes,2,opt,name=filterOptions,proto3,oneof" json:"filterOptions,omitempty"`
}

func (x *CountPlanReq) Reset() {
	*x = CountPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPlanReq) ProtoMessage() {}

func (x *CountPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPlanReq.ProtoReflect.Descriptor instead.
func (*CountPlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{46}
}

func (x *CountPlanReq) GetSearchOptions() *SearchOptions {
	if x != nil {
		return x.SearchOptions
	}
	return nil
}

func (x *CountPlanReq) GetFilterOptions() *PlanFilterOptions {
	if x != nil {
		return x.FilterOptions
	}
	return nil
}

type CountPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountPlanResp) Reset() {
	*x = CountPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountPlanResp) ProtoMessage() {}

func (x *CountPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountPlanResp.ProtoReflect.Descriptor instead.
func (*CountPlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{47}
}

func (x *CountPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RetrievePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=planId,proto3" json:"planId,omitempty"`
}

func (x *RetrievePlanReq) Reset() {
	*x = RetrievePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePlanReq) ProtoMessage() {}

func (x *RetrievePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePlanReq.ProtoReflect.Descriptor instead.
func (*RetrievePlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{48}
}

func (x *RetrievePlanReq) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type RetrievePlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *RetrievePlanResp) Reset() {
	*x = RetrievePlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievePlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievePlanResp) ProtoMessage() {}

func (x *RetrievePlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievePlanResp.ProtoReflect.Descriptor instead.
func (*RetrievePlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{49}
}

func (x *RetrievePlanResp) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CreatePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *CreatePlanReq) Reset() {
	*x = CreatePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanReq) ProtoMessage() {}

func (x *CreatePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanReq.ProtoReflect.Descriptor instead.
func (*CreatePlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{50}
}

func (x *CreatePlanReq) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type CreatePlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=planId,proto3" json:"planId,omitempty"`
}

func (x *CreatePlanResp) Reset() {
	*x = CreatePlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanResp) ProtoMessage() {}

func (x *CreatePlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanResp.ProtoReflect.Descriptor instead.
func (*CreatePlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{51}
}

func (x *CreatePlanResp) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type UpdatePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *Plan `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *UpdatePlanReq) Reset() {
	*x = UpdatePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanReq) ProtoMessage() {}

func (x *UpdatePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanReq.ProtoReflect.Descriptor instead.
func (*UpdatePlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{52}
}

func (x *UpdatePlanReq) GetPlan() *Plan {
	if x != nil {
		return x.Plan
	}
	return nil
}

type UpdatePlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePlanResp) Reset() {
	*x = UpdatePlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePlanResp) ProtoMessage() {}

func (x *UpdatePlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePlanResp.ProtoReflect.Descriptor instead.
func (*UpdatePlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{53}
}

type DeletePlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=planId,proto3" json:"planId,omitempty"`
}

func (x *DeletePlanReq) Reset() {
	*x = DeletePlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlanReq) ProtoMessage() {}

func (x *DeletePlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlanReq.ProtoReflect.Descriptor instead.
func (*DeletePlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{54}
}

func (x *DeletePlanReq) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type DeletePlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePlanResp) Reset() {
	*x = DeletePlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlanResp) ProtoMessage() {}

func (x *DeletePlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlanResp.ProtoReflect.Descriptor instead.
func (*DeletePlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{55}
}

type DonateFishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=planId,proto3" json:"planId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Fish   int64  `protobuf:"varint,3,opt,name=fish,proto3" json:"fish,omitempty"`
}

func (x *DonateFishReq) Reset() {
	*x = DonateFishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonateFishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonateFishReq) ProtoMessage() {}

func (x *DonateFishReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonateFishReq.ProtoReflect.Descriptor instead.
func (*DonateFishReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{56}
}

func (x *DonateFishReq) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *DonateFishReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DonateFishReq) GetFish() int64 {
	if x != nil {
		return x.Fish
	}
	return 0
}

type DonateFishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DonateFishResp) Reset() {
	*x = DonateFishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DonateFishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DonateFishResp) ProtoMessage() {}

func (x *DonateFishResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DonateFishResp.ProtoReflect.Descriptor instead.
func (*DonateFishResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{57}
}

type AddUserFishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Fish   int64  `protobuf:"varint,2,opt,name=fish,proto3" json:"fish,omitempty"`
}

func (x *AddUserFishReq) Reset() {
	*x = AddUserFishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserFishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserFishReq) ProtoMessage() {}

func (x *AddUserFishReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserFishReq.ProtoReflect.Descriptor instead.
func (*AddUserFishReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{58}
}

func (x *AddUserFishReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserFishReq) GetFish() int64 {
	if x != nil {
		return x.Fish
	}
	return 0
}

type AddUserFishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddUserFishResp) Reset() {
	*x = AddUserFishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserFishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserFishResp) ProtoMessage() {}

func (x *AddUserFishResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserFishResp.ProtoReflect.Descriptor instead.
func (*AddUserFishResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{59}
}

type ListFishByPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId            string                   `protobuf:"bytes,1,opt,name=planId,proto3" json:"planId,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,2,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListFishByPlanReq) Reset() {
	*x = ListFishByPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFishByPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFishByPlanReq) ProtoMessage() {}

func (x *ListFishByPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFishByPlanReq.ProtoReflect.Descriptor instead.
func (*ListFishByPlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{60}
}

func (x *ListFishByPlanReq) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *ListFishByPlanReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListFishByPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string         `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
	FishMap map[string]int64 `protobuf:"bytes,2,rep,name=fishMap,proto3" json:"fishMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Total   int64            `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListFishByPlanResp) Reset() {
	*x = ListFishByPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFishByPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFishByPlanResp) ProtoMessage() {}

func (x *ListFishByPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFishByPlanResp.ProtoReflect.Descriptor instead.
func (*ListFishByPlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{61}
}

func (x *ListFishByPlanResp) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *ListFishByPlanResp) GetFishMap() map[string]int64 {
	if x != nil {
		return x.FishMap
	}
	return nil
}

func (x *ListFishByPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListDonateByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            string                   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PaginationOptions *basic.PaginationOptions `protobuf:"bytes,2,opt,name=paginationOptions,proto3,oneof" json:"paginationOptions,omitempty"`
}

func (x *ListDonateByUserReq) Reset() {
	*x = ListDonateByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDonateByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDonateByUserReq) ProtoMessage() {}

func (x *ListDonateByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDonateByUserReq.ProtoReflect.Descriptor instead.
func (*ListDonateByUserReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{62}
}

func (x *ListDonateByUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListDonateByUserReq) GetPaginationOptions() *basic.PaginationOptions {
	if x != nil {
		return x.PaginationOptions
	}
	return nil
}

type ListDonateByUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*Plan `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
	Total int64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Token string  `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ListDonateByUserResp) Reset() {
	*x = ListDonateByUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListDonateByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDonateByUserResp) ProtoMessage() {}

func (x *ListDonateByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDonateByUserResp.ProtoReflect.Descriptor instead.
func (*ListDonateByUserResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{63}
}

func (x *ListDonateByUserResp) GetPlans() []*Plan {
	if x != nil {
		return x.Plans
	}
	return nil
}

func (x *ListDonateByUserResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListDonateByUserResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RetrieveUserFishReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RetrieveUserFishReq) Reset() {
	*x = RetrieveUserFishReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveUserFishReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveUserFishReq) ProtoMessage() {}

func (x *RetrieveUserFishReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveUserFishReq.ProtoReflect.Descriptor instead.
func (*RetrieveUserFishReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{64}
}

func (x *RetrieveUserFishReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type RetrieveUserFishResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fish int64 `protobuf:"varint,1,opt,name=fish,proto3" json:"fish,omitempty"`
}

func (x *RetrieveUserFishResp) Reset() {
	*x = RetrieveUserFishResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveUserFishResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveUserFishResp) ProtoMessage() {}

func (x *RetrieveUserFishResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveUserFishResp.ProtoReflect.Descriptor instead.
func (*RetrieveUserFishResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{65}
}

func (x *RetrieveUserFishResp) GetFish() int64 {
	if x != nil {
		return x.Fish
	}
	return 0
}

type CountDonateByUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CountDonateByUserReq) Reset() {
	*x = CountDonateByUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDonateByUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDonateByUserReq) ProtoMessage() {}

func (x *CountDonateByUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDonateByUserReq.ProtoReflect.Descriptor instead.
func (*CountDonateByUserReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{66}
}

func (x *CountDonateByUserReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CountDonateByUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountDonateByUserResp) Reset() {
	*x = CountDonateByUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDonateByUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDonateByUserResp) ProtoMessage() {}

func (x *CountDonateByUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDonateByUserResp.ProtoReflect.Descriptor instead.
func (*CountDonateByUserResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{67}
}

func (x *CountDonateByUserResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CountDonateByPlanReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=planId,proto3" json:"planId,omitempty"`
}

func (x *CountDonateByPlanReq) Reset() {
	*x = CountDonateByPlanReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDonateByPlanReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDonateByPlanReq) ProtoMessage() {}

func (x *CountDonateByPlanReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDonateByPlanReq.ProtoReflect.Descriptor instead.
func (*CountDonateByPlanReq) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{68}
}

func (x *CountDonateByPlanReq) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type CountDonateByPlanResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CountDonateByPlanResp) Reset() {
	*x = CountDonateByPlanResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_content_content_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDonateByPlanResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDonateByPlanResp) ProtoMessage() {}

func (x *CountDonateByPlanResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_content_content_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDonateByPlanResp.ProtoReflect.Descriptor instead.
func (*CountDonateByPlanResp) Descriptor() ([]byte, []int) {
	return file_meowchat_content_content_proto_rawDescGZIP(), []int{69}
}

func (x *CountDonateByPlanResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_meowchat_content_content_proto protoreflect.FileDescriptor

var file_meowchat_content_content_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x1a, 0x16, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a, 0x0c, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x6b, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x50, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x29, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x58, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x22, 0x4e, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x61,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x52,
	0x04, 0x63, 0x61, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x26, 0x0a, 0x0e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61,
	0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74, 0x22,
	0x37, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x27, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22,
	0x37, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x27, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22,
	0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x4e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x3c, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x73, 0x22,
	0x2a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x96,
	0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61, 0x72, 0x64, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0xb4, 0x02, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a,
	0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0d, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x02, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x07, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xd2, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x0d, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x50, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x27, 0x0a,
	0x0f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2f, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a,
	0x06, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x43, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x6c, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x67, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x12, 0x22,
	0x0a, 0x0c, 0x67, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x22, 0x43, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x30, 0x0a, 0x06, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2d, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x81,
	0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x66, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x67, 0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x67,
	0x65, 0x74, 0x46, 0x69, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x46, 0x69, 0x73,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x65,
	0x74, 0x46, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x22, 0x79, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xb0, 0x02, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52,
	0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x4e, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52,
	0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x02, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x68, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0xce, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x4e, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0d, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x65,
	0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xb0, 0x02, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x4e, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0d, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x4b, 0x0a, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x48, 0x02, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x68, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xce, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a,
	0x0d, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x01, 0x52, 0x0d, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x29, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x6e, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70,
	0x6c, 0x61, 0x6e, 0x22, 0x3b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e,
	0x22, 0x28, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x04, 0x70,
	0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c,
	0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e,
	0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x53, 0x0a, 0x0d, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x69, 0x73, 0x68, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x6f, 0x6e,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3c, 0x0a, 0x0e, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x69, 0x73, 0x68, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x8e, 0x01, 0x0a,
	0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x73, 0x68, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x11, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcd, 0x01,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x73, 0x68, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x4b,
	0x0a, 0x07, 0x66, 0x69, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x73, 0x68, 0x42, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x46, 0x69, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x66, 0x69, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x1a, 0x3a, 0x0a, 0x0c, 0x46, 0x69, 0x73, 0x68, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x90, 0x01,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4b, 0x0a,
	0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x70, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x2d, 0x0a, 0x13, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x2a, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x69, 0x73, 0x68, 0x22, 0x2e, 0x0a,
	0x14, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a,
	0x15, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2e, 0x0a, 0x14,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x15,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x8f, 0x17, 0x0a, 0x0e,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c,
	0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x46, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x43, 0x61, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61,
	0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x52, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a,
	0x0e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x55, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x55, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x08, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73,
	0x74, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x52, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61,
	0x6c, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x69, 0x63, 0x69,
	0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4c, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1e,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x55, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12,
	0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0a, 0x44, 0x6f, 0x6e,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x73, 0x68, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x6e, 0x61, 0x74,
	0x65, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x6e, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61,
	0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x5b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x73, 0x68, 0x42, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x73, 0x68, 0x42,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x69, 0x73, 0x68, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x61,
	0x0a, 0x10, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69,
	0x73, 0x68, 0x12, 0x25, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x64, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x27,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x11, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x6f, 0x6e,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x42, 0x7c, 0x0a,
	0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x78, 0x68, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2e, 0x69,
	0x64, 0x6c, 0x67, 0x65, 0x6e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x78, 0x68, 0x2d, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x69, 0x64, 0x6c, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f,
	0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_meowchat_content_content_proto_rawDescOnce sync.Once
	file_meowchat_content_content_proto_rawDescData = file_meowchat_content_content_proto_rawDesc
)

func file_meowchat_content_content_proto_rawDescGZIP() []byte {
	file_meowchat_content_content_proto_rawDescOnce.Do(func() {
		file_meowchat_content_content_proto_rawDescData = protoimpl.X.CompressGZIP(file_meowchat_content_content_proto_rawDescData)
	})
	return file_meowchat_content_content_proto_rawDescData
}

var file_meowchat_content_content_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_meowchat_content_content_proto_goTypes = []interface{}{
	(*SearchCatReq)(nil),            // 0: meowchat.content.SearchCatReq
	(*SearchCatResp)(nil),           // 1: meowchat.content.SearchCatResp
	(*ListCatReq)(nil),              // 2: meowchat.content.ListCatReq
	(*ListCatResp)(nil),             // 3: meowchat.content.ListCatResp
	(*RetrieveCatReq)(nil),          // 4: meowchat.content.RetrieveCatReq
	(*RetrieveCatResp)(nil),         // 5: meowchat.content.RetrieveCatResp
	(*CreateCatReq)(nil),            // 6: meowchat.content.CreateCatReq
	(*CreateCatResp)(nil),           // 7: meowchat.content.CreateCatResp
	(*UpdateCatReq)(nil),            // 8: meowchat.content.UpdateCatReq
	(*UpdateCatResp)(nil),           // 9: meowchat.content.UpdateCatResp
	(*DeleteCatReq)(nil),            // 10: meowchat.content.DeleteCatReq
	(*DeleteCatResp)(nil),           // 11: meowchat.content.DeleteCatResp
	(*CreateImageReq)(nil),          // 12: meowchat.content.CreateImageReq
	(*CreateImageResp)(nil),         // 13: meowchat.content.CreateImageResp
	(*DeleteImageReq)(nil),          // 14: meowchat.content.DeleteImageReq
	(*DeleteImageResp)(nil),         // 15: meowchat.content.DeleteImageResp
	(*ListImageReq)(nil),            // 16: meowchat.content.ListImageReq
	(*ListImageResp)(nil),           // 17: meowchat.content.ListImageResp
	(*ListMomentReq)(nil),           // 18: meowchat.content.ListMomentReq
	(*ListMomentResp)(nil),          // 19: meowchat.content.ListMomentResp
	(*CountMomentReq)(nil),          // 20: meowchat.content.CountMomentReq
	(*CountMomentResp)(nil),         // 21: meowchat.content.CountMomentResp
	(*RetrieveMomentReq)(nil),       // 22: meowchat.content.RetrieveMomentReq
	(*RetrieveMomentResp)(nil),      // 23: meowchat.content.RetrieveMomentResp
	(*CreateMomentReq)(nil),         // 24: meowchat.content.CreateMomentReq
	(*CreateMomentResp)(nil),        // 25: meowchat.content.CreateMomentResp
	(*UpdateMomentReq)(nil),         // 26: meowchat.content.UpdateMomentReq
	(*UpdateMomentResp)(nil),        // 27: meowchat.content.UpdateMomentResp
	(*DeleteMomentReq)(nil),         // 28: meowchat.content.DeleteMomentReq
	(*DeleteMomentResp)(nil),        // 29: meowchat.content.DeleteMomentResp
	(*CreatePostReq)(nil),           // 30: meowchat.content.CreatePostReq
	(*CreatePostResp)(nil),          // 31: meowchat.content.CreatePostResp
	(*RetrievePostReq)(nil),         // 32: meowchat.content.RetrievePostReq
	(*RetrievePostResp)(nil),        // 33: meowchat.content.RetrievePostResp
	(*UpdatePostReq)(nil),           // 34: meowchat.content.UpdatePostReq
	(*UpdatePostResp)(nil),          // 35: meowchat.content.UpdatePostResp
	(*DeletePostReq)(nil),           // 36: meowchat.content.DeletePostReq
	(*DeletePostResp)(nil),          // 37: meowchat.content.DeletePostResp
	(*ListPostReq)(nil),             // 38: meowchat.content.ListPostReq
	(*ListPostResp)(nil),            // 39: meowchat.content.ListPostResp
	(*CountPostReq)(nil),            // 40: meowchat.content.CountPostReq
	(*CountPostResp)(nil),           // 41: meowchat.content.CountPostResp
	(*SetOfficialReq)(nil),          // 42: meowchat.content.SetOfficialReq
	(*SetOfficialResp)(nil),         // 43: meowchat.content.SetOfficialResp
	(*ListPlanReq)(nil),             // 44: meowchat.content.ListPlanReq
	(*ListPlanResp)(nil),            // 45: meowchat.content.ListPlanResp
	(*CountPlanReq)(nil),            // 46: meowchat.content.CountPlanReq
	(*CountPlanResp)(nil),           // 47: meowchat.content.CountPlanResp
	(*RetrievePlanReq)(nil),         // 48: meowchat.content.RetrievePlanReq
	(*RetrievePlanResp)(nil),        // 49: meowchat.content.RetrievePlanResp
	(*CreatePlanReq)(nil),           // 50: meowchat.content.CreatePlanReq
	(*CreatePlanResp)(nil),          // 51: meowchat.content.CreatePlanResp
	(*UpdatePlanReq)(nil),           // 52: meowchat.content.UpdatePlanReq
	(*UpdatePlanResp)(nil),          // 53: meowchat.content.UpdatePlanResp
	(*DeletePlanReq)(nil),           // 54: meowchat.content.DeletePlanReq
	(*DeletePlanResp)(nil),          // 55: meowchat.content.DeletePlanResp
	(*DonateFishReq)(nil),           // 56: meowchat.content.DonateFishReq
	(*DonateFishResp)(nil),          // 57: meowchat.content.DonateFishResp
	(*AddUserFishReq)(nil),          // 58: meowchat.content.AddUserFishReq
	(*AddUserFishResp)(nil),         // 59: meowchat.content.AddUserFishResp
	(*ListFishByPlanReq)(nil),       // 60: meowchat.content.ListFishByPlanReq
	(*ListFishByPlanResp)(nil),      // 61: meowchat.content.ListFishByPlanResp
	(*ListDonateByUserReq)(nil),     // 62: meowchat.content.ListDonateByUserReq
	(*ListDonateByUserResp)(nil),    // 63: meowchat.content.ListDonateByUserResp
	(*RetrieveUserFishReq)(nil),     // 64: meowchat.content.RetrieveUserFishReq
	(*RetrieveUserFishResp)(nil),    // 65: meowchat.content.RetrieveUserFishResp
	(*CountDonateByUserReq)(nil),    // 66: meowchat.content.CountDonateByUserReq
	(*CountDonateByUserResp)(nil),   // 67: meowchat.content.CountDonateByUserResp
	(*CountDonateByPlanReq)(nil),    // 68: meowchat.content.CountDonateByPlanReq
	(*CountDonateByPlanResp)(nil),   // 69: meowchat.content.CountDonateByPlanResp
	nil,                             // 70: meowchat.content.ListFishByPlanResp.FishMapEntry
	(*Cat)(nil),                     // 71: meowchat.content.Cat
	(*CreateImageElement)(nil),      // 72: meowchat.content.CreateImageElement
	(*Image)(nil),                   // 73: meowchat.content.Image
	(*SearchOptions)(nil),           // 74: meowchat.content.SearchOptions
	(*MomentFilterOptions)(nil),     // 75: meowchat.content.MomentFilterOptions
	(*basic.PaginationOptions)(nil), // 76: basic.PaginationOptions
	(*Moment)(nil),                  // 77: meowchat.content.Moment
	(*Post)(nil),                    // 78: meowchat.content.Post
	(*PostFilterOptions)(nil),       // 79: meowchat.content.PostFilterOptions
	(*PlanFilterOptions)(nil),       // 80: meowchat.content.PlanFilterOptions
	(*Plan)(nil),                    // 81: meowchat.content.Plan
}
var file_meowchat_content_content_proto_depIdxs = []int32{
	71, // 0: meowchat.content.SearchCatResp.cats:type_name -> meowchat.content.Cat
	71, // 1: meowchat.content.ListCatResp.cats:type_name -> meowchat.content.Cat
	71, // 2: meowchat.content.RetrieveCatResp.cat:type_name -> meowchat.content.Cat
	71, // 3: meowchat.content.CreateCatReq.cat:type_name -> meowchat.content.Cat
	71, // 4: meowchat.content.UpdateCatReq.cat:type_name -> meowchat.content.Cat
	72, // 5: meowchat.content.CreateImageReq.images:type_name -> meowchat.content.CreateImageElement
	73, // 6: meowchat.content.ListImageResp.images:type_name -> meowchat.content.Image
	74, // 7: meowchat.content.ListMomentReq.searchOptions:type_name -> meowchat.content.SearchOptions
	75, // 8: meowchat.content.ListMomentReq.filterOptions:type_name -> meowchat.content.MomentFilterOptions
	76, // 9: meowchat.content.ListMomentReq.paginationOptions:type_name -> basic.PaginationOptions
	77, // 10: meowchat.content.ListMomentResp.moments:type_name -> meowchat.content.Moment
	74, // 11: meowchat.content.CountMomentReq.searchOptions:type_name -> meowchat.content.SearchOptions
	75, // 12: meowchat.content.CountMomentReq.filterOptions:type_name -> meowchat.content.MomentFilterOptions
	77, // 13: meowchat.content.RetrieveMomentResp.moment:type_name -> meowchat.content.Moment
	77, // 14: meowchat.content.CreateMomentReq.moment:type_name -> meowchat.content.Moment
	77, // 15: meowchat.content.UpdateMomentReq.moment:type_name -> meowchat.content.Moment
	78, // 16: meowchat.content.RetrievePostResp.post:type_name -> meowchat.content.Post
	74, // 17: meowchat.content.ListPostReq.searchOptions:type_name -> meowchat.content.SearchOptions
	79, // 18: meowchat.content.ListPostReq.filterOptions:type_name -> meowchat.content.PostFilterOptions
	76, // 19: meowchat.content.ListPostReq.paginationOptions:type_name -> basic.PaginationOptions
	78, // 20: meowchat.content.ListPostResp.posts:type_name -> meowchat.content.Post
	74, // 21: meowchat.content.CountPostReq.searchOptions:type_name -> meowchat.content.SearchOptions
	79, // 22: meowchat.content.CountPostReq.filterOptions:type_name -> meowchat.content.PostFilterOptions
	74, // 23: meowchat.content.ListPlanReq.searchOptions:type_name -> meowchat.content.SearchOptions
	80, // 24: meowchat.content.ListPlanReq.filterOptions:type_name -> meowchat.content.PlanFilterOptions
	76, // 25: meowchat.content.ListPlanReq.paginationOptions:type_name -> basic.PaginationOptions
	81, // 26: meowchat.content.ListPlanResp.plans:type_name -> meowchat.content.Plan
	74, // 27: meowchat.content.CountPlanReq.searchOptions:type_name -> meowchat.content.SearchOptions
	80, // 28: meowchat.content.CountPlanReq.filterOptions:type_name -> meowchat.content.PlanFilterOptions
	81, // 29: meowchat.content.RetrievePlanResp.plan:type_name -> meowchat.content.Plan
	81, // 30: meowchat.content.CreatePlanReq.plan:type_name -> meowchat.content.Plan
	81, // 31: meowchat.content.UpdatePlanReq.plan:type_name -> meowchat.content.Plan
	76, // 32: meowchat.content.ListFishByPlanReq.paginationOptions:type_name -> basic.PaginationOptions
	70, // 33: meowchat.content.ListFishByPlanResp.fishMap:type_name -> meowchat.content.ListFishByPlanResp.FishMapEntry
	76, // 34: meowchat.content.ListDonateByUserReq.paginationOptions:type_name -> basic.PaginationOptions
	81, // 35: meowchat.content.ListDonateByUserResp.plans:type_name -> meowchat.content.Plan
	0,  // 36: meowchat.content.ContentService.SearchCat:input_type -> meowchat.content.SearchCatReq
	2,  // 37: meowchat.content.ContentService.ListCat:input_type -> meowchat.content.ListCatReq
	4,  // 38: meowchat.content.ContentService.RetrieveCat:input_type -> meowchat.content.RetrieveCatReq
	6,  // 39: meowchat.content.ContentService.CreateCat:input_type -> meowchat.content.CreateCatReq
	8,  // 40: meowchat.content.ContentService.UpdateCat:input_type -> meowchat.content.UpdateCatReq
	10, // 41: meowchat.content.ContentService.DeleteCat:input_type -> meowchat.content.DeleteCatReq
	12, // 42: meowchat.content.ContentService.CreateImage:input_type -> meowchat.content.CreateImageReq
	14, // 43: meowchat.content.ContentService.DeleteImage:input_type -> meowchat.content.DeleteImageReq
	16, // 44: meowchat.content.ContentService.ListImage:input_type -> meowchat.content.ListImageReq
	18, // 45: meowchat.content.ContentService.ListMoment:input_type -> meowchat.content.ListMomentReq
	20, // 46: meowchat.content.ContentService.CountMoment:input_type -> meowchat.content.CountMomentReq
	22, // 47: meowchat.content.ContentService.RetrieveMoment:input_type -> meowchat.content.RetrieveMomentReq
	24, // 48: meowchat.content.ContentService.CreateMoment:input_type -> meowchat.content.CreateMomentReq
	26, // 49: meowchat.content.ContentService.UpdateMoment:input_type -> meowchat.content.UpdateMomentReq
	28, // 50: meowchat.content.ContentService.DeleteMoment:input_type -> meowchat.content.DeleteMomentReq
	30, // 51: meowchat.content.ContentService.CreatePost:input_type -> meowchat.content.CreatePostReq
	32, // 52: meowchat.content.ContentService.RetrievePost:input_type -> meowchat.content.RetrievePostReq
	34, // 53: meowchat.content.ContentService.UpdatePost:input_type -> meowchat.content.UpdatePostReq
	36, // 54: meowchat.content.ContentService.DeletePost:input_type -> meowchat.content.DeletePostReq
	38, // 55: meowchat.content.ContentService.ListPost:input_type -> meowchat.content.ListPostReq
	40, // 56: meowchat.content.ContentService.CountPost:input_type -> meowchat.content.CountPostReq
	42, // 57: meowchat.content.ContentService.SetOfficial:input_type -> meowchat.content.SetOfficialReq
	44, // 58: meowchat.content.ContentService.ListPlan:input_type -> meowchat.content.ListPlanReq
	46, // 59: meowchat.content.ContentService.CountPlan:input_type -> meowchat.content.CountPlanReq
	48, // 60: meowchat.content.ContentService.RetrievePlan:input_type -> meowchat.content.RetrievePlanReq
	50, // 61: meowchat.content.ContentService.CreatePlan:input_type -> meowchat.content.CreatePlanReq
	52, // 62: meowchat.content.ContentService.UpdatePlan:input_type -> meowchat.content.UpdatePlanReq
	54, // 63: meowchat.content.ContentService.DeletePlan:input_type -> meowchat.content.DeletePlanReq
	56, // 64: meowchat.content.ContentService.DonateFish:input_type -> meowchat.content.DonateFishReq
	58, // 65: meowchat.content.ContentService.AddUserFish:input_type -> meowchat.content.AddUserFishReq
	62, // 66: meowchat.content.ContentService.ListDonateByUser:input_type -> meowchat.content.ListDonateByUserReq
	60, // 67: meowchat.content.ContentService.ListFishByPlan:input_type -> meowchat.content.ListFishByPlanReq
	64, // 68: meowchat.content.ContentService.RetrieveUserFish:input_type -> meowchat.content.RetrieveUserFishReq
	66, // 69: meowchat.content.ContentService.CountDonateByUser:input_type -> meowchat.content.CountDonateByUserReq
	68, // 70: meowchat.content.ContentService.CountDonateByPlan:input_type -> meowchat.content.CountDonateByPlanReq
	1,  // 71: meowchat.content.ContentService.SearchCat:output_type -> meowchat.content.SearchCatResp
	3,  // 72: meowchat.content.ContentService.ListCat:output_type -> meowchat.content.ListCatResp
	5,  // 73: meowchat.content.ContentService.RetrieveCat:output_type -> meowchat.content.RetrieveCatResp
	7,  // 74: meowchat.content.ContentService.CreateCat:output_type -> meowchat.content.CreateCatResp
	9,  // 75: meowchat.content.ContentService.UpdateCat:output_type -> meowchat.content.UpdateCatResp
	11, // 76: meowchat.content.ContentService.DeleteCat:output_type -> meowchat.content.DeleteCatResp
	13, // 77: meowchat.content.ContentService.CreateImage:output_type -> meowchat.content.CreateImageResp
	15, // 78: meowchat.content.ContentService.DeleteImage:output_type -> meowchat.content.DeleteImageResp
	17, // 79: meowchat.content.ContentService.ListImage:output_type -> meowchat.content.ListImageResp
	19, // 80: meowchat.content.ContentService.ListMoment:output_type -> meowchat.content.ListMomentResp
	21, // 81: meowchat.content.ContentService.CountMoment:output_type -> meowchat.content.CountMomentResp
	23, // 82: meowchat.content.ContentService.RetrieveMoment:output_type -> meowchat.content.RetrieveMomentResp
	25, // 83: meowchat.content.ContentService.CreateMoment:output_type -> meowchat.content.CreateMomentResp
	27, // 84: meowchat.content.ContentService.UpdateMoment:output_type -> meowchat.content.UpdateMomentResp
	29, // 85: meowchat.content.ContentService.DeleteMoment:output_type -> meowchat.content.DeleteMomentResp
	31, // 86: meowchat.content.ContentService.CreatePost:output_type -> meowchat.content.CreatePostResp
	33, // 87: meowchat.content.ContentService.RetrievePost:output_type -> meowchat.content.RetrievePostResp
	35, // 88: meowchat.content.ContentService.UpdatePost:output_type -> meowchat.content.UpdatePostResp
	37, // 89: meowchat.content.ContentService.DeletePost:output_type -> meowchat.content.DeletePostResp
	39, // 90: meowchat.content.ContentService.ListPost:output_type -> meowchat.content.ListPostResp
	41, // 91: meowchat.content.ContentService.CountPost:output_type -> meowchat.content.CountPostResp
	43, // 92: meowchat.content.ContentService.SetOfficial:output_type -> meowchat.content.SetOfficialResp
	45, // 93: meowchat.content.ContentService.ListPlan:output_type -> meowchat.content.ListPlanResp
	47, // 94: meowchat.content.ContentService.CountPlan:output_type -> meowchat.content.CountPlanResp
	49, // 95: meowchat.content.ContentService.RetrievePlan:output_type -> meowchat.content.RetrievePlanResp
	51, // 96: meowchat.content.ContentService.CreatePlan:output_type -> meowchat.content.CreatePlanResp
	53, // 97: meowchat.content.ContentService.UpdatePlan:output_type -> meowchat.content.UpdatePlanResp
	55, // 98: meowchat.content.ContentService.DeletePlan:output_type -> meowchat.content.DeletePlanResp
	57, // 99: meowchat.content.ContentService.DonateFish:output_type -> meowchat.content.DonateFishResp
	59, // 100: meowchat.content.ContentService.AddUserFish:output_type -> meowchat.content.AddUserFishResp
	63, // 101: meowchat.content.ContentService.ListDonateByUser:output_type -> meowchat.content.ListDonateByUserResp
	61, // 102: meowchat.content.ContentService.ListFishByPlan:output_type -> meowchat.content.ListFishByPlanResp
	65, // 103: meowchat.content.ContentService.RetrieveUserFish:output_type -> meowchat.content.RetrieveUserFishResp
	67, // 104: meowchat.content.ContentService.CountDonateByUser:output_type -> meowchat.content.CountDonateByUserResp
	69, // 105: meowchat.content.ContentService.CountDonateByPlan:output_type -> meowchat.content.CountDonateByPlanResp
	71, // [71:106] is the sub-list for method output_type
	36, // [36:71] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_meowchat_content_content_proto_init() }
func file_meowchat_content_content_proto_init() {
	if File_meowchat_content_content_proto != nil {
		return
	}
	file_meowchat_content_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_meowchat_content_content_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMomentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMomentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPostResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOfficialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOfficialResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievePlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonateFishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DonateFishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserFishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserFishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFishByPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFishByPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDonateByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListDonateByUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveUserFishReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveUserFishResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDonateByUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDonateByUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDonateByPlanReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_content_content_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDonateByPlanResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_meowchat_content_content_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[38].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[60].OneofWrappers = []interface{}{}
	file_meowchat_content_content_proto_msgTypes[62].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meowchat_content_content_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meowchat_content_content_proto_goTypes,
		DependencyIndexes: file_meowchat_content_content_proto_depIdxs,
		MessageInfos:      file_meowchat_content_content_proto_msgTypes,
	}.Build()
	File_meowchat_content_content_proto = out.File
	file_meowchat_content_content_proto_rawDesc = nil
	file_meowchat_content_content_proto_goTypes = nil
	file_meowchat_content_content_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.8.0. DO NOT EDIT.

type ContentService interface {
	SearchCat(ctx context.Context, req *SearchCatReq) (res *SearchCatResp, err error)
	ListCat(ctx context.Context, req *ListCatReq) (res *ListCatResp, err error)
	RetrieveCat(ctx context.Context, req *RetrieveCatReq) (res *RetrieveCatResp, err error)
	CreateCat(ctx context.Context, req *CreateCatReq) (res *CreateCatResp, err error)
	UpdateCat(ctx context.Context, req *UpdateCatReq) (res *UpdateCatResp, err error)
	DeleteCat(ctx context.Context, req *DeleteCatReq) (res *DeleteCatResp, err error)
	CreateImage(ctx context.Context, req *CreateImageReq) (res *CreateImageResp, err error)
	DeleteImage(ctx context.Context, req *DeleteImageReq) (res *DeleteImageResp, err error)
	ListImage(ctx context.Context, req *ListImageReq) (res *ListImageResp, err error)
	ListMoment(ctx context.Context, req *ListMomentReq) (res *ListMomentResp, err error)
	CountMoment(ctx context.Context, req *CountMomentReq) (res *CountMomentResp, err error)
	RetrieveMoment(ctx context.Context, req *RetrieveMomentReq) (res *RetrieveMomentResp, err error)
	CreateMoment(ctx context.Context, req *CreateMomentReq) (res *CreateMomentResp, err error)
	UpdateMoment(ctx context.Context, req *UpdateMomentReq) (res *UpdateMomentResp, err error)
	DeleteMoment(ctx context.Context, req *DeleteMomentReq) (res *DeleteMomentResp, err error)
	CreatePost(ctx context.Context, req *CreatePostReq) (res *CreatePostResp, err error)
	RetrievePost(ctx context.Context, req *RetrievePostReq) (res *RetrievePostResp, err error)
	UpdatePost(ctx context.Context, req *UpdatePostReq) (res *UpdatePostResp, err error)
	DeletePost(ctx context.Context, req *DeletePostReq) (res *DeletePostResp, err error)
	ListPost(ctx context.Context, req *ListPostReq) (res *ListPostResp, err error)
	CountPost(ctx context.Context, req *CountPostReq) (res *CountPostResp, err error)
	SetOfficial(ctx context.Context, req *SetOfficialReq) (res *SetOfficialResp, err error)
	ListPlan(ctx context.Context, req *ListPlanReq) (res *ListPlanResp, err error)
	CountPlan(ctx context.Context, req *CountPlanReq) (res *CountPlanResp, err error)
	RetrievePlan(ctx context.Context, req *RetrievePlanReq) (res *RetrievePlanResp, err error)
	CreatePlan(ctx context.Context, req *CreatePlanReq) (res *CreatePlanResp, err error)
	UpdatePlan(ctx context.Context, req *UpdatePlanReq) (res *UpdatePlanResp, err error)
	DeletePlan(ctx context.Context, req *DeletePlanReq) (res *DeletePlanResp, err error)
	DonateFish(ctx context.Context, req *DonateFishReq) (res *DonateFishResp, err error)
	AddUserFish(ctx context.Context, req *AddUserFishReq) (res *AddUserFishResp, err error)
	ListDonateByUser(ctx context.Context, req *ListDonateByUserReq) (res *ListDonateByUserResp, err error)
	ListFishByPlan(ctx context.Context, req *ListFishByPlanReq) (res *ListFishByPlanResp, err error)
	RetrieveUserFish(ctx context.Context, req *RetrieveUserFishReq) (res *RetrieveUserFishResp, err error)
	CountDonateByUser(ctx context.Context, req *CountDonateByUserReq) (res *CountDonateByUserResp, err error)
	CountDonateByPlan(ctx context.Context, req *CountDonateByPlanReq) (res *CountDonateByPlanResp, err error)
}
