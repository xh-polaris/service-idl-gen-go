// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: meowchat/collection/collection.proto

package collection

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count       int64  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // 获取的数量
	Skip        int64  `protobuf:"varint,2,opt,name=skip,proto3" json:"skip,omitempty"`   //跳过前skip个
	CommunityId string `protobuf:"bytes,3,opt,name=communityId,proto3" json:"communityId,omitempty"`
	Keyword     string `protobuf:"bytes,4,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *SearchCatReq) Reset() {
	*x = SearchCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCatReq) ProtoMessage() {}

func (x *SearchCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCatReq.ProtoReflect.Descriptor instead.
func (*SearchCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{0}
}

func (x *SearchCatReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchCatReq) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *SearchCatReq) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *SearchCatReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type SearchCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats  []*Cat `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats,omitempty"`
	Total int64  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchCatResp) Reset() {
	*x = SearchCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCatResp) ProtoMessage() {}

func (x *SearchCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCatResp.ProtoReflect.Descriptor instead.
func (*SearchCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{1}
}

func (x *SearchCatResp) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *SearchCatResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommunityId string `protobuf:"bytes,1,opt,name=communityId,proto3" json:"communityId,omitempty"`
	Count       int64  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"` // 获取的数量
	Skip        int64  `protobuf:"varint,3,opt,name=skip,proto3" json:"skip,omitempty"`   //跳过前skip个
}

func (x *ListCatReq) Reset() {
	*x = ListCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatReq) ProtoMessage() {}

func (x *ListCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatReq.ProtoReflect.Descriptor instead.
func (*ListCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{2}
}

func (x *ListCatReq) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *ListCatReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListCatReq) GetSkip() int64 {
	if x != nil {
		return x.Skip
	}
	return 0
}

type ListCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats  []*Cat `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats,omitempty"`
	Total int64  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListCatResp) Reset() {
	*x = ListCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatResp) ProtoMessage() {}

func (x *ListCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatResp.ProtoReflect.Descriptor instead.
func (*ListCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{3}
}

func (x *ListCatResp) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *ListCatResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RetrieveCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
}

func (x *RetrieveCatReq) Reset() {
	*x = RetrieveCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCatReq) ProtoMessage() {}

func (x *RetrieveCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCatReq.ProtoReflect.Descriptor instead.
func (*RetrieveCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveCatReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type RetrieveCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cat *Cat `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat,omitempty"`
}

func (x *RetrieveCatResp) Reset() {
	*x = RetrieveCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCatResp) ProtoMessage() {}

func (x *RetrieveCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCatResp.ProtoReflect.Descriptor instead.
func (*RetrieveCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveCatResp) GetCat() *Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type CreateCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cat *Cat `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat,omitempty"`
}

func (x *CreateCatReq) Reset() {
	*x = CreateCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatReq) ProtoMessage() {}

func (x *CreateCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatReq.ProtoReflect.Descriptor instead.
func (*CreateCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCatReq) GetCat() *Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type CreateCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
}

func (x *CreateCatResp) Reset() {
	*x = CreateCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCatResp) ProtoMessage() {}

func (x *CreateCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCatResp.ProtoReflect.Descriptor instead.
func (*CreateCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCatResp) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type UpdateCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cat *Cat `protobuf:"bytes,1,opt,name=cat,proto3" json:"cat,omitempty"`
}

func (x *UpdateCatReq) Reset() {
	*x = UpdateCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatReq) ProtoMessage() {}

func (x *UpdateCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatReq.ProtoReflect.Descriptor instead.
func (*UpdateCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCatReq) GetCat() *Cat {
	if x != nil {
		return x.Cat
	}
	return nil
}

type UpdateCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCatResp) Reset() {
	*x = UpdateCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCatResp) ProtoMessage() {}

func (x *UpdateCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCatResp.ProtoReflect.Descriptor instead.
func (*UpdateCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{9}
}

type DeleteCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
}

func (x *DeleteCatReq) Reset() {
	*x = DeleteCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatReq) ProtoMessage() {}

func (x *DeleteCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatReq.ProtoReflect.Descriptor instead.
func (*DeleteCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCatReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

type DeleteCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCatResp) Reset() {
	*x = DeleteCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCatResp) ProtoMessage() {}

func (x *DeleteCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCatResp.ProtoReflect.Descriptor instead.
func (*DeleteCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{11}
}

type CreateImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*CreateImageElement `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *CreateImageReq) Reset() {
	*x = CreateImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageReq) ProtoMessage() {}

func (x *CreateImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageReq.ProtoReflect.Descriptor instead.
func (*CreateImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{12}
}

func (x *CreateImageReq) GetImages() []*CreateImageElement {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageIds []string `protobuf:"bytes,1,rep,name=imageIds,proto3" json:"imageIds,omitempty"`
}

func (x *CreateImageResp) Reset() {
	*x = CreateImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateImageResp) ProtoMessage() {}

func (x *CreateImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateImageResp.ProtoReflect.Descriptor instead.
func (*CreateImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{13}
}

func (x *CreateImageResp) GetImageIds() []string {
	if x != nil {
		return x.ImageIds
	}
	return nil
}

type DeleteImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageId string `protobuf:"bytes,1,opt,name=imageId,proto3" json:"imageId,omitempty"`
}

func (x *DeleteImageReq) Reset() {
	*x = DeleteImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageReq) ProtoMessage() {}

func (x *DeleteImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageReq.ProtoReflect.Descriptor instead.
func (*DeleteImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteImageReq) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

type DeleteImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteImageResp) Reset() {
	*x = DeleteImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteImageResp) ProtoMessage() {}

func (x *DeleteImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteImageResp.ProtoReflect.Descriptor instead.
func (*DeleteImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{15}
}

type ListImageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId    string  `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
	PrevId   *string `protobuf:"bytes,2,opt,name=prevId,proto3,oneof" json:"prevId,omitempty"`
	Limit    int64   `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int64   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Backward bool    `protobuf:"varint,5,opt,name=backward,proto3" json:"backward,omitempty"`
}

func (x *ListImageReq) Reset() {
	*x = ListImageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageReq) ProtoMessage() {}

func (x *ListImageReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageReq.ProtoReflect.Descriptor instead.
func (*ListImageReq) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{16}
}

func (x *ListImageReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

func (x *ListImageReq) GetPrevId() string {
	if x != nil && x.PrevId != nil {
		return *x.PrevId
	}
	return ""
}

func (x *ListImageReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListImageReq) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListImageReq) GetBackward() bool {
	if x != nil {
		return x.Backward
	}
	return false
}

type ListImageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	Total  int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListImageResp) Reset() {
	*x = ListImageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_collection_collection_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListImageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageResp) ProtoMessage() {}

func (x *ListImageResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_collection_collection_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageResp.ProtoReflect.Descriptor instead.
func (*ListImageResp) Descriptor() ([]byte, []int) {
	return file_meowchat_collection_collection_proto_rawDescGZIP(), []int{17}
}

func (x *ListImageResp) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ListImageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_meowchat_collection_collection_proto protoreflect.FileDescriptor

var file_meowchat_collection_collection_proto_rawDesc = []byte{
	0x0a, 0x24, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x20, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x74, 0x0a,
	0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x53, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x04, 0x63, 0x61,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x58, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6b, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x6b,
	0x69, 0x70, 0x22, 0x51, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x26, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22, 0x3d, 0x0a,
	0x0f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74, 0x22, 0x3a, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x03,
	0x63, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22,
	0x3a, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x2a, 0x0a, 0x03, 0x63, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d,
	0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x43, 0x61, 0x74, 0x52, 0x03, 0x63, 0x61, 0x74, 0x22, 0x0f, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x24, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74,
	0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x51, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x2a, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x96, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x70,
	0x72, 0x65, 0x76, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x76, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x77, 0x61,
	0x72, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x49, 0x64, 0x22, 0x59, 0x0a,
	0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x93, 0x06, 0x0a, 0x11, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52,
	0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x12, 0x1f, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x58, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x12,
	0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x52, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x12,
	0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x58, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x48,
	0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x68, 0x2d,
	0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d,
	0x69, 0x64, 0x6c, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78,
	0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meowchat_collection_collection_proto_rawDescOnce sync.Once
	file_meowchat_collection_collection_proto_rawDescData = file_meowchat_collection_collection_proto_rawDesc
)

func file_meowchat_collection_collection_proto_rawDescGZIP() []byte {
	file_meowchat_collection_collection_proto_rawDescOnce.Do(func() {
		file_meowchat_collection_collection_proto_rawDescData = protoimpl.X.CompressGZIP(file_meowchat_collection_collection_proto_rawDescData)
	})
	return file_meowchat_collection_collection_proto_rawDescData
}

var file_meowchat_collection_collection_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_meowchat_collection_collection_proto_goTypes = []interface{}{
	(*SearchCatReq)(nil),       // 0: meowchat.collection.SearchCatReq
	(*SearchCatResp)(nil),      // 1: meowchat.collection.SearchCatResp
	(*ListCatReq)(nil),         // 2: meowchat.collection.ListCatReq
	(*ListCatResp)(nil),        // 3: meowchat.collection.ListCatResp
	(*RetrieveCatReq)(nil),     // 4: meowchat.collection.RetrieveCatReq
	(*RetrieveCatResp)(nil),    // 5: meowchat.collection.RetrieveCatResp
	(*CreateCatReq)(nil),       // 6: meowchat.collection.CreateCatReq
	(*CreateCatResp)(nil),      // 7: meowchat.collection.CreateCatResp
	(*UpdateCatReq)(nil),       // 8: meowchat.collection.UpdateCatReq
	(*UpdateCatResp)(nil),      // 9: meowchat.collection.UpdateCatResp
	(*DeleteCatReq)(nil),       // 10: meowchat.collection.DeleteCatReq
	(*DeleteCatResp)(nil),      // 11: meowchat.collection.DeleteCatResp
	(*CreateImageReq)(nil),     // 12: meowchat.collection.CreateImageReq
	(*CreateImageResp)(nil),    // 13: meowchat.collection.CreateImageResp
	(*DeleteImageReq)(nil),     // 14: meowchat.collection.DeleteImageReq
	(*DeleteImageResp)(nil),    // 15: meowchat.collection.DeleteImageResp
	(*ListImageReq)(nil),       // 16: meowchat.collection.ListImageReq
	(*ListImageResp)(nil),      // 17: meowchat.collection.ListImageResp
	(*Cat)(nil),                // 18: meowchat.collection.Cat
	(*CreateImageElement)(nil), // 19: meowchat.collection.CreateImageElement
	(*Image)(nil),              // 20: meowchat.collection.Image
}
var file_meowchat_collection_collection_proto_depIdxs = []int32{
	18, // 0: meowchat.collection.SearchCatResp.cats:type_name -> meowchat.collection.Cat
	18, // 1: meowchat.collection.ListCatResp.cats:type_name -> meowchat.collection.Cat
	18, // 2: meowchat.collection.RetrieveCatResp.cat:type_name -> meowchat.collection.Cat
	18, // 3: meowchat.collection.CreateCatReq.cat:type_name -> meowchat.collection.Cat
	18, // 4: meowchat.collection.UpdateCatReq.cat:type_name -> meowchat.collection.Cat
	19, // 5: meowchat.collection.CreateImageReq.images:type_name -> meowchat.collection.CreateImageElement
	20, // 6: meowchat.collection.ListImageResp.images:type_name -> meowchat.collection.Image
	0,  // 7: meowchat.collection.CollectionService.SearchCat:input_type -> meowchat.collection.SearchCatReq
	2,  // 8: meowchat.collection.CollectionService.ListCat:input_type -> meowchat.collection.ListCatReq
	4,  // 9: meowchat.collection.CollectionService.RetrieveCat:input_type -> meowchat.collection.RetrieveCatReq
	6,  // 10: meowchat.collection.CollectionService.CreateCat:input_type -> meowchat.collection.CreateCatReq
	8,  // 11: meowchat.collection.CollectionService.UpdateCat:input_type -> meowchat.collection.UpdateCatReq
	10, // 12: meowchat.collection.CollectionService.DeleteCat:input_type -> meowchat.collection.DeleteCatReq
	12, // 13: meowchat.collection.CollectionService.CreateImage:input_type -> meowchat.collection.CreateImageReq
	14, // 14: meowchat.collection.CollectionService.DeleteImage:input_type -> meowchat.collection.DeleteImageReq
	16, // 15: meowchat.collection.CollectionService.ListImage:input_type -> meowchat.collection.ListImageReq
	1,  // 16: meowchat.collection.CollectionService.SearchCat:output_type -> meowchat.collection.SearchCatResp
	3,  // 17: meowchat.collection.CollectionService.ListCat:output_type -> meowchat.collection.ListCatResp
	5,  // 18: meowchat.collection.CollectionService.RetrieveCat:output_type -> meowchat.collection.RetrieveCatResp
	7,  // 19: meowchat.collection.CollectionService.CreateCat:output_type -> meowchat.collection.CreateCatResp
	9,  // 20: meowchat.collection.CollectionService.UpdateCat:output_type -> meowchat.collection.UpdateCatResp
	11, // 21: meowchat.collection.CollectionService.DeleteCat:output_type -> meowchat.collection.DeleteCatResp
	13, // 22: meowchat.collection.CollectionService.CreateImage:output_type -> meowchat.collection.CreateImageResp
	15, // 23: meowchat.collection.CollectionService.DeleteImage:output_type -> meowchat.collection.DeleteImageResp
	17, // 24: meowchat.collection.CollectionService.ListImage:output_type -> meowchat.collection.ListImageResp
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_meowchat_collection_collection_proto_init() }
func file_meowchat_collection_collection_proto_init() {
	if File_meowchat_collection_collection_proto != nil {
		return
	}
	file_meowchat_collection_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_meowchat_collection_collection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_collection_collection_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListImageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_meowchat_collection_collection_proto_msgTypes[16].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meowchat_collection_collection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meowchat_collection_collection_proto_goTypes,
		DependencyIndexes: file_meowchat_collection_collection_proto_depIdxs,
		MessageInfos:      file_meowchat_collection_collection_proto_msgTypes,
	}.Build()
	File_meowchat_collection_collection_proto = out.File
	file_meowchat_collection_collection_proto_rawDesc = nil
	file_meowchat_collection_collection_proto_goTypes = nil
	file_meowchat_collection_collection_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.6.2. DO NOT EDIT.

type CollectionService interface {
	SearchCat(ctx context.Context, req *SearchCatReq) (res *SearchCatResp, err error)
	ListCat(ctx context.Context, req *ListCatReq) (res *ListCatResp, err error)
	RetrieveCat(ctx context.Context, req *RetrieveCatReq) (res *RetrieveCatResp, err error)
	CreateCat(ctx context.Context, req *CreateCatReq) (res *CreateCatResp, err error)
	UpdateCat(ctx context.Context, req *UpdateCatReq) (res *UpdateCatResp, err error)
	DeleteCat(ctx context.Context, req *DeleteCatReq) (res *DeleteCatResp, err error)
	CreateImage(ctx context.Context, req *CreateImageReq) (res *CreateImageResp, err error)
	DeleteImage(ctx context.Context, req *DeleteImageReq) (res *DeleteImageResp, err error)
	ListImage(ctx context.Context, req *ListImageReq) (res *ListImageResp, err error)
}
