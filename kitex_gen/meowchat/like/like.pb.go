// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: meowchat/like/like.proto

package like

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DoLikeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// 点赞的目标ID，可以是评论ID，文章ID等
	TargetId string `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	// 点赞的类型，点赞评论、点赞文章等都可以视为点赞的不同类型（类型常量定义在like/types.go）
	Type int64 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 对象所关联的ID，比如评论点赞对应文章ID等
	AssociatedId string `protobuf:"bytes,4,opt,name=associatedId,proto3" json:"associatedId,omitempty"`
}

func (x *DoLikeReq) Reset() {
	*x = DoLikeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoLikeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoLikeReq) ProtoMessage() {}

func (x *DoLikeReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoLikeReq.ProtoReflect.Descriptor instead.
func (*DoLikeReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{0}
}

func (x *DoLikeReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DoLikeReq) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *DoLikeReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *DoLikeReq) GetAssociatedId() string {
	if x != nil {
		return x.AssociatedId
	}
	return ""
}

type DoLikeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoLikeResp) Reset() {
	*x = DoLikeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoLikeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoLikeResp) ProtoMessage() {}

func (x *DoLikeResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoLikeResp.ProtoReflect.Descriptor instead.
func (*DoLikeResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{1}
}

type GetUserLikedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TargetId string `protobuf:"bytes,2,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Type     int64  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetUserLikedReq) Reset() {
	*x = GetUserLikedReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLikedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLikedReq) ProtoMessage() {}

func (x *GetUserLikedReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLikedReq.ProtoReflect.Descriptor instead.
func (*GetUserLikedReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserLikedReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserLikedReq) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *GetUserLikedReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GetUserLikedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Liked bool `protobuf:"varint,1,opt,name=liked,proto3" json:"liked,omitempty"`
}

func (x *GetUserLikedResp) Reset() {
	*x = GetUserLikedResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLikedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLikedResp) ProtoMessage() {}

func (x *GetUserLikedResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLikedResp.ProtoReflect.Descriptor instead.
func (*GetUserLikedResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserLikedResp) GetLiked() bool {
	if x != nil {
		return x.Liked
	}
	return false
}

type GetTargetLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId string `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	Type     int64  `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *GetTargetLikesReq) Reset() {
	*x = GetTargetLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTargetLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetLikesReq) ProtoMessage() {}

func (x *GetTargetLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetLikesReq.ProtoReflect.Descriptor instead.
func (*GetTargetLikesReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{4}
}

func (x *GetTargetLikesReq) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *GetTargetLikesReq) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type GetTargetLikesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetTargetLikesResp) Reset() {
	*x = GetTargetLikesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTargetLikesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTargetLikesResp) ProtoMessage() {}

func (x *GetTargetLikesResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTargetLikesResp.ProtoReflect.Descriptor instead.
func (*GetTargetLikesResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{5}
}

func (x *GetTargetLikesResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetUserLikesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	TargetType int64  `protobuf:"varint,2,opt,name=targetType,proto3" json:"targetType,omitempty"`
}

func (x *GetUserLikesReq) Reset() {
	*x = GetUserLikesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLikesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLikesReq) ProtoMessage() {}

func (x *GetUserLikesReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLikesReq.ProtoReflect.Descriptor instead.
func (*GetUserLikesReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserLikesReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserLikesReq) GetTargetType() int64 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

type GetUserLikesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Likes []*Like `protobuf:"bytes,1,rep,name=likes,proto3" json:"likes,omitempty"`
}

func (x *GetUserLikesResp) Reset() {
	*x = GetUserLikesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLikesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLikesResp) ProtoMessage() {}

func (x *GetUserLikesResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLikesResp.ProtoReflect.Descriptor instead.
func (*GetUserLikesResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserLikesResp) GetLikes() []*Like {
	if x != nil {
		return x.Likes
	}
	return nil
}

type GetLikedUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId   string `protobuf:"bytes,1,opt,name=targetId,proto3" json:"targetId,omitempty"`
	TargetType int64  `protobuf:"varint,2,opt,name=targetType,proto3" json:"targetType,omitempty"`
}

func (x *GetLikedUsersReq) Reset() {
	*x = GetLikedUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikedUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedUsersReq) ProtoMessage() {}

func (x *GetLikedUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedUsersReq.ProtoReflect.Descriptor instead.
func (*GetLikedUsersReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{8}
}

func (x *GetLikedUsersReq) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *GetLikedUsersReq) GetTargetType() int64 {
	if x != nil {
		return x.TargetType
	}
	return 0
}

type GetLikedUsersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []string `protobuf:"bytes,1,rep,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *GetLikedUsersResp) Reset() {
	*x = GetLikedUsersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLikedUsersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedUsersResp) ProtoMessage() {}

func (x *GetLikedUsersResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedUsersResp.ProtoReflect.Descriptor instead.
func (*GetLikedUsersResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{9}
}

func (x *GetLikedUsersResp) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

// 获取 top k
type GetTopKReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K     int64  `protobuf:"varint,1,opt,name=k,proto3" json:"k,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Range int64  `protobuf:"varint,3,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *GetTopKReq) Reset() {
	*x = GetTopKReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopKReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopKReq) ProtoMessage() {}

func (x *GetTopKReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopKReq.ProtoReflect.Descriptor instead.
func (*GetTopKReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{10}
}

func (x *GetTopKReq) GetK() int64 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *GetTopKReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetTopKReq) GetRange() int64 {
	if x != nil {
		return x.Range
	}
	return 0
}

type GetTopKResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*ItemScore `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *GetTopKResp) Reset() {
	*x = GetTopKResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopKResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopKResp) ProtoMessage() {}

func (x *GetTopKResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopKResp.ProtoReflect.Descriptor instead.
func (*GetTopKResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{11}
}

func (x *GetTopKResp) GetItem() []*ItemScore {
	if x != nil {
		return x.Item
	}
	return nil
}

// 增加分数
type AddScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Val  int64  `protobuf:"varint,3,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *AddScoreReq) Reset() {
	*x = AddScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScoreReq) ProtoMessage() {}

func (x *AddScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScoreReq.ProtoReflect.Descriptor instead.
func (*AddScoreReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{12}
}

func (x *AddScoreReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AddScoreReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddScoreReq) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type AddScoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Val int64 `protobuf:"varint,1,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *AddScoreResp) Reset() {
	*x = AddScoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddScoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddScoreResp) ProtoMessage() {}

func (x *AddScoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddScoreResp.ProtoReflect.Descriptor instead.
func (*AddScoreResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{13}
}

func (x *AddScoreResp) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type DailyUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DailyUpdateReq) Reset() {
	*x = DailyUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyUpdateReq) ProtoMessage() {}

func (x *DailyUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyUpdateReq.ProtoReflect.Descriptor instead.
func (*DailyUpdateReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{14}
}

type DailyUpdateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DailyUpdateResp) Reset() {
	*x = DailyUpdateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyUpdateResp) ProtoMessage() {}

func (x *DailyUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyUpdateResp.ProtoReflect.Descriptor instead.
func (*DailyUpdateResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{15}
}

// 获取猫咪人气
type ListCatPopularityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId []string `protobuf:"bytes,1,rep,name=catId,proto3" json:"catId,omitempty"`
}

func (x *ListCatPopularityReq) Reset() {
	*x = ListCatPopularityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatPopularityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatPopularityReq) ProtoMessage() {}

func (x *ListCatPopularityReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatPopularityReq.ProtoReflect.Descriptor instead.
func (*ListCatPopularityReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{16}
}

func (x *ListCatPopularityReq) GetCatId() []string {
	if x != nil {
		return x.CatId
	}
	return nil
}

type ListCatPopularityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats []*CatPop `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats,omitempty"`
}

func (x *ListCatPopularityResp) Reset() {
	*x = ListCatPopularityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatPopularityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatPopularityResp) ProtoMessage() {}

func (x *ListCatPopularityResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatPopularityResp.ProtoReflect.Descriptor instead.
func (*ListCatPopularityResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{17}
}

func (x *ListCatPopularityResp) GetCats() []*CatPop {
	if x != nil {
		return x.Cats
	}
	return nil
}

// 操作猫咪人气
type AddCatPopularityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CatId string `protobuf:"bytes,1,opt,name=catId,proto3" json:"catId,omitempty"`
	Val   int64  `protobuf:"varint,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *AddCatPopularityReq) Reset() {
	*x = AddCatPopularityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCatPopularityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCatPopularityReq) ProtoMessage() {}

func (x *AddCatPopularityReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCatPopularityReq.ProtoReflect.Descriptor instead.
func (*AddCatPopularityReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{18}
}

func (x *AddCatPopularityReq) GetCatId() string {
	if x != nil {
		return x.CatId
	}
	return ""
}

func (x *AddCatPopularityReq) GetVal() int64 {
	if x != nil {
		return x.Val
	}
	return 0
}

type AddCatPopularityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCatPopularityResp) Reset() {
	*x = AddCatPopularityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCatPopularityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCatPopularityResp) ProtoMessage() {}

func (x *AddCatPopularityResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCatPopularityResp.ProtoReflect.Descriptor instead.
func (*AddCatPopularityResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{19}
}

// 查看 topk 猫咪
type ListTopCatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	K int64 `protobuf:"varint,1,opt,name=k,proto3" json:"k,omitempty"`
}

func (x *ListTopCatReq) Reset() {
	*x = ListTopCatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopCatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopCatReq) ProtoMessage() {}

func (x *ListTopCatReq) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopCatReq.ProtoReflect.Descriptor instead.
func (*ListTopCatReq) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{20}
}

func (x *ListTopCatReq) GetK() int64 {
	if x != nil {
		return x.K
	}
	return 0
}

type ListTopCatResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cats []*CatPop `protobuf:"bytes,1,rep,name=cats,proto3" json:"cats,omitempty"`
}

func (x *ListTopCatResp) Reset() {
	*x = ListTopCatResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meowchat_like_like_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopCatResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopCatResp) ProtoMessage() {}

func (x *ListTopCatResp) ProtoReflect() protoreflect.Message {
	mi := &file_meowchat_like_like_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopCatResp.ProtoReflect.Descriptor instead.
func (*ListTopCatResp) Descriptor() ([]byte, []int) {
	return file_meowchat_like_like_proto_rawDescGZIP(), []int{21}
}

func (x *ListTopCatResp) GetCats() []*CatPop {
	if x != nil {
		return x.Cats
	}
	return nil
}

var File_meowchat_like_like_proto protoreflect.FileDescriptor

var file_meowchat_like_like_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2f,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x1a, 0x1a, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x77, 0x0a, 0x09, 0x44, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x73,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64, 0x22, 0x0c,
	0x0a, 0x0a, 0x44, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x59, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65,
	0x64, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69,
	0x6b, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x29, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2c, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x43,
	0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x20, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2c, 0x0a, 0x14, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x22, 0x3d, 0x0a, 0x13,
	0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x16, 0x0a, 0x14, 0x41,
	0x64, 0x64, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x1d, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x43, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x6b, 0x22, 0x3b, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69,
	0x6b, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x32,
	0xf5, 0x06, 0x0a, 0x0b, 0x4c, 0x69, 0x6b, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3d, 0x0a, 0x06, 0x44, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x18, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x44, 0x6f, 0x4c, 0x69, 0x6b, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c,
	0x69, 0x6b, 0x65, 0x2e, 0x44, 0x6f, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x12, 0x1e, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x55,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73,
	0x12, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69,
	0x6b, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x6b, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x4b, 0x12, 0x19, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74,
	0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x4b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4c, 0x0a, 0x0b, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65,
	0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x6f, 0x77,
	0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5b, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c,
	0x69, 0x6b, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63, 0x68,
	0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x61, 0x74, 0x50, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x6f,
	0x77, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x6f, 0x70, 0x43, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x6d, 0x65, 0x6f, 0x77, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x6c, 0x69, 0x6b, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70,
	0x43, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x68, 0x2d, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x73,
	0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x69, 0x64, 0x6c, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x67, 0x6f, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x65,
	0x6f, 0x77, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x6c, 0x69, 0x6b, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_meowchat_like_like_proto_rawDescOnce sync.Once
	file_meowchat_like_like_proto_rawDescData = file_meowchat_like_like_proto_rawDesc
)

func file_meowchat_like_like_proto_rawDescGZIP() []byte {
	file_meowchat_like_like_proto_rawDescOnce.Do(func() {
		file_meowchat_like_like_proto_rawDescData = protoimpl.X.CompressGZIP(file_meowchat_like_like_proto_rawDescData)
	})
	return file_meowchat_like_like_proto_rawDescData
}

var file_meowchat_like_like_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_meowchat_like_like_proto_goTypes = []interface{}{
	(*DoLikeReq)(nil),             // 0: meowchat.like.DoLikeReq
	(*DoLikeResp)(nil),            // 1: meowchat.like.DoLikeResp
	(*GetUserLikedReq)(nil),       // 2: meowchat.like.GetUserLikedReq
	(*GetUserLikedResp)(nil),      // 3: meowchat.like.GetUserLikedResp
	(*GetTargetLikesReq)(nil),     // 4: meowchat.like.GetTargetLikesReq
	(*GetTargetLikesResp)(nil),    // 5: meowchat.like.GetTargetLikesResp
	(*GetUserLikesReq)(nil),       // 6: meowchat.like.GetUserLikesReq
	(*GetUserLikesResp)(nil),      // 7: meowchat.like.GetUserLikesResp
	(*GetLikedUsersReq)(nil),      // 8: meowchat.like.GetLikedUsersReq
	(*GetLikedUsersResp)(nil),     // 9: meowchat.like.GetLikedUsersResp
	(*GetTopKReq)(nil),            // 10: meowchat.like.GetTopKReq
	(*GetTopKResp)(nil),           // 11: meowchat.like.GetTopKResp
	(*AddScoreReq)(nil),           // 12: meowchat.like.AddScoreReq
	(*AddScoreResp)(nil),          // 13: meowchat.like.AddScoreResp
	(*DailyUpdateReq)(nil),        // 14: meowchat.like.DailyUpdateReq
	(*DailyUpdateResp)(nil),       // 15: meowchat.like.DailyUpdateResp
	(*ListCatPopularityReq)(nil),  // 16: meowchat.like.ListCatPopularityReq
	(*ListCatPopularityResp)(nil), // 17: meowchat.like.ListCatPopularityResp
	(*AddCatPopularityReq)(nil),   // 18: meowchat.like.AddCatPopularityReq
	(*AddCatPopularityResp)(nil),  // 19: meowchat.like.AddCatPopularityResp
	(*ListTopCatReq)(nil),         // 20: meowchat.like.ListTopCatReq
	(*ListTopCatResp)(nil),        // 21: meowchat.like.ListTopCatResp
	(*Like)(nil),                  // 22: meowchat.like.Like
	(*ItemScore)(nil),             // 23: meowchat.like.ItemScore
	(*CatPop)(nil),                // 24: meowchat.like.CatPop
}
var file_meowchat_like_like_proto_depIdxs = []int32{
	22, // 0: meowchat.like.GetUserLikesResp.likes:type_name -> meowchat.like.Like
	23, // 1: meowchat.like.GetTopKResp.item:type_name -> meowchat.like.ItemScore
	24, // 2: meowchat.like.ListCatPopularityResp.cats:type_name -> meowchat.like.CatPop
	24, // 3: meowchat.like.ListTopCatResp.cats:type_name -> meowchat.like.CatPop
	0,  // 4: meowchat.like.LikeService.DoLike:input_type -> meowchat.like.DoLikeReq
	2,  // 5: meowchat.like.LikeService.GetUserLike:input_type -> meowchat.like.GetUserLikedReq
	4,  // 6: meowchat.like.LikeService.GetTargetLikes:input_type -> meowchat.like.GetTargetLikesReq
	6,  // 7: meowchat.like.LikeService.GetUserLikes:input_type -> meowchat.like.GetUserLikesReq
	8,  // 8: meowchat.like.LikeService.GetLikedUsers:input_type -> meowchat.like.GetLikedUsersReq
	10, // 9: meowchat.like.LikeService.GetTopK:input_type -> meowchat.like.GetTopKReq
	12, // 10: meowchat.like.LikeService.AddScore:input_type -> meowchat.like.AddScoreReq
	14, // 11: meowchat.like.LikeService.DailyUpdate:input_type -> meowchat.like.DailyUpdateReq
	16, // 12: meowchat.like.LikeService.ListCatPopularity:input_type -> meowchat.like.ListCatPopularityReq
	18, // 13: meowchat.like.LikeService.AddCatPopularity:input_type -> meowchat.like.AddCatPopularityReq
	20, // 14: meowchat.like.LikeService.ListTopCat:input_type -> meowchat.like.ListTopCatReq
	1,  // 15: meowchat.like.LikeService.DoLike:output_type -> meowchat.like.DoLikeResp
	3,  // 16: meowchat.like.LikeService.GetUserLike:output_type -> meowchat.like.GetUserLikedResp
	5,  // 17: meowchat.like.LikeService.GetTargetLikes:output_type -> meowchat.like.GetTargetLikesResp
	7,  // 18: meowchat.like.LikeService.GetUserLikes:output_type -> meowchat.like.GetUserLikesResp
	9,  // 19: meowchat.like.LikeService.GetLikedUsers:output_type -> meowchat.like.GetLikedUsersResp
	11, // 20: meowchat.like.LikeService.GetTopK:output_type -> meowchat.like.GetTopKResp
	13, // 21: meowchat.like.LikeService.AddScore:output_type -> meowchat.like.AddScoreResp
	15, // 22: meowchat.like.LikeService.DailyUpdate:output_type -> meowchat.like.DailyUpdateResp
	17, // 23: meowchat.like.LikeService.ListCatPopularity:output_type -> meowchat.like.ListCatPopularityResp
	19, // 24: meowchat.like.LikeService.AddCatPopularity:output_type -> meowchat.like.AddCatPopularityResp
	21, // 25: meowchat.like.LikeService.ListTopCat:output_type -> meowchat.like.ListTopCatResp
	15, // [15:26] is the sub-list for method output_type
	4,  // [4:15] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_meowchat_like_like_proto_init() }
func file_meowchat_like_like_proto_init() {
	if File_meowchat_like_like_proto != nil {
		return
	}
	file_meowchat_like_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_meowchat_like_like_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoLikeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoLikeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLikedReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLikedResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTargetLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTargetLikesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLikesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLikesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikedUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLikedUsersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopKReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopKResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddScoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyUpdateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatPopularityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatPopularityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCatPopularityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCatPopularityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopCatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meowchat_like_like_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopCatResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meowchat_like_like_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meowchat_like_like_proto_goTypes,
		DependencyIndexes: file_meowchat_like_like_proto_depIdxs,
		MessageInfos:      file_meowchat_like_like_proto_msgTypes,
	}.Build()
	File_meowchat_like_like_proto = out.File
	file_meowchat_like_like_proto_rawDesc = nil
	file_meowchat_like_like_proto_goTypes = nil
	file_meowchat_like_like_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.6.2. DO NOT EDIT.

type LikeService interface {
	DoLike(ctx context.Context, req *DoLikeReq) (res *DoLikeResp, err error)
	GetUserLike(ctx context.Context, req *GetUserLikedReq) (res *GetUserLikedResp, err error)
	GetTargetLikes(ctx context.Context, req *GetTargetLikesReq) (res *GetTargetLikesResp, err error)
	GetUserLikes(ctx context.Context, req *GetUserLikesReq) (res *GetUserLikesResp, err error)
	GetLikedUsers(ctx context.Context, req *GetLikedUsersReq) (res *GetLikedUsersResp, err error)
	GetTopK(ctx context.Context, req *GetTopKReq) (res *GetTopKResp, err error)
	AddScore(ctx context.Context, req *AddScoreReq) (res *AddScoreResp, err error)
	DailyUpdate(ctx context.Context, req *DailyUpdateReq) (res *DailyUpdateResp, err error)
	ListCatPopularity(ctx context.Context, req *ListCatPopularityReq) (res *ListCatPopularityResp, err error)
	AddCatPopularity(ctx context.Context, req *AddCatPopularityReq) (res *AddCatPopularityResp, err error)
	ListTopCat(ctx context.Context, req *ListTopCatReq) (res *ListTopCatResp, err error)
}
